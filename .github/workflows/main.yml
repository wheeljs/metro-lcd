name: Deploy to GitHub Pages via angular-cli-ghpages

on:
  push:
    branches:
    - release/*  # branches matching refs/heads/release/*

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Use Node.js 18.x
      uses: actions/setup-node@v1
      with:
        node-version: 18.x

    - uses: pnpm/action-setup@v3
      name: Install pnpm
      with:
        version: 8
        run_install: false

    - name: Get pnpm store directory
      shell: bash
      run: |
        echo "STORE_PATH=$(pnpm store path --silent)" >> $GITHUB_ENV

    - uses: actions/cache@v4
      name: Setup pnpm cache
      with:
        path: ${{ env.STORE_PATH }}
        key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
        restore-keys: |
          ${{ runner.os }}-pnpm-store-

    - name: Prepare and deploy
      env:
        GH_TOKEN: ${{ secrets.GH_TOKEN }}
      run: |
        pnpm install
        # npm run lint
        ###
        # Configure Angular first!
        ####
        # npm test -- --watch=false --progress=false --browsers=ChromeHeadlessCI
        # npm run webdriver-update-ci
        # npm run e2e -- --protractor-config=e2e/protractor-ci.conf.js --webdriver-update=false
        ####
        pnpm run prebuild
        pnpm exec ng deploy --base-href=/metro-lcd/ --name="metro-lcd-bot" --email=ttvip88888888@foxmail.com
  
  create-pr:
    runs-on: ubuntu-latest
    needs: build-and-deploy

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        submodules: true

    - name: Get Tag
      id: get_tag
      run: |
        echo "version=$(echo '${{ github.ref_name }}' | sed 's/release\///')" >> $GITHUB_OUTPUT

    - name: Create PR
      env:
        GH_TOKEN: ${{ secrets.PERSONAL_TOKEN }}
      run: |
        git fetch origin
        gh pr create --fill --title 'release: ${{ steps.get_tag.outputs.version }}' --body ''
