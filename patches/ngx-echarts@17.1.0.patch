diff --git a/esm2022/lib/change-filter-v2.mjs b/esm2022/lib/change-filter-v2.mjs
index d9dd2a6b4b4587ee1213bd5bc0d709c9bfde93b3..4096281c39194b8c550620619162861679a63f23 100644
--- a/esm2022/lib/change-filter-v2.mjs
+++ b/esm2022/lib/change-filter-v2.mjs
@@ -47,4 +47,4 @@ export class ChangeFilterV2 {
         }));
     }
 }
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlLWZpbHRlci12Mi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1lY2hhcnRzL3NyYy9saWIvY2hhbmdlLWZpbHRlci12Mi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUVuRCxNQUFNLE9BQU8sY0FBYztJQUEzQjtRQUNVLFlBQU8sR0FBRyxJQUFJLGFBQWEsQ0FBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDOUMsa0JBQWEsR0FBaUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQXlEM0QsQ0FBQztJQXZEQyxRQUFRLENBQUMsT0FBc0I7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELE9BQU87UUFDTCxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ25DLENBQUM7SUFFRCxRQUFRLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQzlDLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMvQixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDaEIsTUFBTSxLQUFLLEdBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztnQkFDM0MsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7b0JBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDaEI7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsR0FBRyxDQUFJLEdBQVcsRUFBRSxPQUF1QjtRQUN6QyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ2hCLE1BQU0sS0FBSyxHQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzNDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoQjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsUUFBUSxDQUFJLEdBQVcsRUFBRSxPQUF1QjtRQUM5QyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFLEVBQUU7Z0JBQ2pELE1BQU0sS0FBSyxHQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzNDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoQjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsZ0JBQWdCLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQ3RELElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMvQixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsRUFBRTtnQkFDakQsTUFBTSxLQUFLLEdBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztnQkFDM0MsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7b0JBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDaEI7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBSZXBsYXlTdWJqZWN0LCBTdWJzY3JpcHRpb24gfSBmcm9tICdyeGpzJztcblxuZXhwb3J0IGNsYXNzIENoYW5nZUZpbHRlclYyIHtcbiAgcHJpdmF0ZSBzdWJqZWN0ID0gbmV3IFJlcGxheVN1YmplY3Q8U2ltcGxlQ2hhbmdlcz4oMSk7XG4gIHByaXZhdGUgc3Vic2NyaXB0aW9uczogU3Vic2NyaXB0aW9uID0gbmV3IFN1YnNjcmlwdGlvbigpO1xuXG4gIGRvRmlsdGVyKGNoYW5nZXM6IFNpbXBsZUNoYW5nZXMpIHtcbiAgICB0aGlzLnN1YmplY3QubmV4dChjaGFuZ2VzKTtcbiAgfVxuXG4gIGRpc3Bvc2UoKSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKCk7XG4gIH1cblxuICBub3RFbXB0eTxUPihrZXk6IHN0cmluZywgaGFuZGxlcjogKHQ6IFQpID0+IHZvaWQpIHtcbiAgICB0aGlzLnN1YnNjcmlwdGlvbnMuYWRkKFxuICAgICAgdGhpcy5zdWJqZWN0LnN1YnNjcmliZShjaGFuZ2VzID0+IHtcbiAgICAgICAgaWYgKGNoYW5nZXNba2V5XSkge1xuICAgICAgICAgIGNvbnN0IHZhbHVlOiBUID0gY2hhbmdlc1trZXldLmN1cnJlbnRWYWx1ZTtcbiAgICAgICAgICBpZiAodmFsdWUgIT09IHVuZGVmaW5lZCAmJiB2YWx1ZSAhPT0gbnVsbCkge1xuICAgICAgICAgICAgaGFuZGxlcih2YWx1ZSk7XG4gICAgICAgICAgfVxuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBoYXM8VD4oa2V5OiBzdHJpbmcsIGhhbmRsZXI6ICh0OiBUKSA9PiB2b2lkKSB7XG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChcbiAgICAgIHRoaXMuc3ViamVjdC5zdWJzY3JpYmUoY2hhbmdlcyA9PiB7XG4gICAgICAgIGlmIChjaGFuZ2VzW2tleV0pIHtcbiAgICAgICAgICBjb25zdCB2YWx1ZTogVCA9IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWU7XG4gICAgICAgICAgaGFuZGxlcih2YWx1ZSk7XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgKTtcbiAgfVxuXG4gIG5vdEZpcnN0PFQ+KGtleTogc3RyaW5nLCBoYW5kbGVyOiAodDogVCkgPT4gdm9pZCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoXG4gICAgICB0aGlzLnN1YmplY3Quc3Vic2NyaWJlKGNoYW5nZXMgPT4ge1xuICAgICAgICBpZiAoY2hhbmdlc1trZXldICYmICFjaGFuZ2VzW2tleV0uaXNGaXJzdENoYW5nZSgpKSB7XG4gICAgICAgICAgY29uc3QgdmFsdWU6IFQgPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xuICAgICAgICAgIGhhbmRsZXIodmFsdWUpO1xuICAgICAgICB9XG4gICAgICB9KVxuICAgICk7XG4gIH1cblxuICBub3RGaXJzdEFuZEVtcHR5PFQ+KGtleTogc3RyaW5nLCBoYW5kbGVyOiAodDogVCkgPT4gdm9pZCkge1xuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoXG4gICAgICB0aGlzLnN1YmplY3Quc3Vic2NyaWJlKGNoYW5nZXMgPT4ge1xuICAgICAgICBpZiAoY2hhbmdlc1trZXldICYmICFjaGFuZ2VzW2tleV0uaXNGaXJzdENoYW5nZSgpKSB7XG4gICAgICAgICAgY29uc3QgdmFsdWU6IFQgPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xuICAgICAgICAgIGlmICh2YWx1ZSAhPT0gdW5kZWZpbmVkICYmIHZhbHVlICE9PSBudWxsKSB7XG4gICAgICAgICAgICBoYW5kbGVyKHZhbHVlKTtcbiAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICAgIH0pXG4gICAgKTtcbiAgfVxufVxuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiY2hhbmdlLWZpbHRlci12Mi5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uL3Byb2plY3RzL25neC1lY2hhcnRzL3NyYy9saWIvY2hhbmdlLWZpbHRlci12Mi50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFDQSxPQUFPLEVBQUUsYUFBYSxFQUFFLFlBQVksRUFBRSxNQUFNLE1BQU0sQ0FBQztBQUVuRCxNQUFNLE9BQU8sY0FBYztJQUEzQjtRQUNVLFlBQU8sR0FBRyxJQUFJLGFBQWEsQ0FBZ0IsQ0FBQyxDQUFDLENBQUM7UUFDOUMsa0JBQWEsR0FBaUIsSUFBSSxZQUFZLEVBQUUsQ0FBQztJQXlEM0QsQ0FBQztJQXZEQyxRQUFRLENBQUMsT0FBc0I7UUFDN0IsSUFBSSxDQUFDLE9BQU8sQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUM7SUFDN0IsQ0FBQztJQUVELE9BQU87UUFDTCxJQUFJLENBQUMsYUFBYSxDQUFDLFdBQVcsRUFBRSxDQUFDO0lBQ25DLENBQUM7SUFFRCxRQUFRLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQzlDLElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMvQixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsRUFBRTtnQkFDaEIsTUFBTSxLQUFLLEdBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztnQkFDM0MsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7b0JBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDaEI7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsR0FBRyxDQUFJLEdBQVcsRUFBRSxPQUF1QjtRQUN6QyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLEVBQUU7Z0JBQ2hCLE1BQU0sS0FBSyxHQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzNDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoQjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsUUFBUSxDQUFJLEdBQVcsRUFBRSxPQUF1QjtRQUM5QyxJQUFJLENBQUMsYUFBYSxDQUFDLEdBQUcsQ0FDcEIsSUFBSSxDQUFDLE9BQU8sQ0FBQyxTQUFTLENBQUMsT0FBTyxDQUFDLEVBQUU7WUFDL0IsSUFBSSxPQUFPLENBQUMsR0FBRyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsR0FBRyxDQUFDLENBQUMsYUFBYSxFQUFFLEVBQUU7Z0JBQ2pELE1BQU0sS0FBSyxHQUFNLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxZQUFZLENBQUM7Z0JBQzNDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQzthQUNoQjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0lBRUQsZ0JBQWdCLENBQUksR0FBVyxFQUFFLE9BQXVCO1FBQ3RELElBQUksQ0FBQyxhQUFhLENBQUMsR0FBRyxDQUNwQixJQUFJLENBQUMsT0FBTyxDQUFDLFNBQVMsQ0FBQyxPQUFPLENBQUMsRUFBRTtZQUMvQixJQUFJLE9BQU8sQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxHQUFHLENBQUMsQ0FBQyxhQUFhLEVBQUUsRUFBRTtnQkFDakQsTUFBTSxLQUFLLEdBQU0sT0FBTyxDQUFDLEdBQUcsQ0FBQyxDQUFDLFlBQVksQ0FBQztnQkFDM0MsSUFBSSxLQUFLLEtBQUssU0FBUyxJQUFJLEtBQUssS0FBSyxJQUFJLEVBQUU7b0JBQ3pDLE9BQU8sQ0FBQyxLQUFLLENBQUMsQ0FBQztpQkFDaEI7YUFDRjtRQUNILENBQUMsQ0FBQyxDQUNILENBQUM7SUFDSixDQUFDO0NBQ0YiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBTaW1wbGVDaGFuZ2VzIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7IFJlcGxheVN1YmplY3QsIFN1YnNjcmlwdGlvbiB9IGZyb20gJ3J4anMnO1xyXG5cclxuZXhwb3J0IGNsYXNzIENoYW5nZUZpbHRlclYyIHtcclxuICBwcml2YXRlIHN1YmplY3QgPSBuZXcgUmVwbGF5U3ViamVjdDxTaW1wbGVDaGFuZ2VzPigxKTtcclxuICBwcml2YXRlIHN1YnNjcmlwdGlvbnM6IFN1YnNjcmlwdGlvbiA9IG5ldyBTdWJzY3JpcHRpb24oKTtcclxuXHJcbiAgZG9GaWx0ZXIoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgdGhpcy5zdWJqZWN0Lm5leHQoY2hhbmdlcyk7XHJcbiAgfVxyXG5cclxuICBkaXNwb3NlKCkge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLnVuc3Vic2NyaWJlKCk7XHJcbiAgfVxyXG5cclxuICBub3RFbXB0eTxUPihrZXk6IHN0cmluZywgaGFuZGxlcjogKHQ6IFQpID0+IHZvaWQpIHtcclxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoXHJcbiAgICAgIHRoaXMuc3ViamVjdC5zdWJzY3JpYmUoY2hhbmdlcyA9PiB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXNba2V5XSkge1xyXG4gICAgICAgICAgY29uc3QgdmFsdWU6IFQgPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgaGFuZGxlcih2YWx1ZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIGhhczxUPihrZXk6IHN0cmluZywgaGFuZGxlcjogKHQ6IFQpID0+IHZvaWQpIHtcclxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoXHJcbiAgICAgIHRoaXMuc3ViamVjdC5zdWJzY3JpYmUoY2hhbmdlcyA9PiB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXNba2V5XSkge1xyXG4gICAgICAgICAgY29uc3QgdmFsdWU6IFQgPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICAgICAgaGFuZGxlcih2YWx1ZSk7XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcblxyXG4gIG5vdEZpcnN0PFQ+KGtleTogc3RyaW5nLCBoYW5kbGVyOiAodDogVCkgPT4gdm9pZCkge1xyXG4gICAgdGhpcy5zdWJzY3JpcHRpb25zLmFkZChcclxuICAgICAgdGhpcy5zdWJqZWN0LnN1YnNjcmliZShjaGFuZ2VzID0+IHtcclxuICAgICAgICBpZiAoY2hhbmdlc1trZXldICYmICFjaGFuZ2VzW2tleV0uaXNGaXJzdENoYW5nZSgpKSB7XHJcbiAgICAgICAgICBjb25zdCB2YWx1ZTogVCA9IGNoYW5nZXNba2V5XS5jdXJyZW50VmFsdWU7XHJcbiAgICAgICAgICBoYW5kbGVyKHZhbHVlKTtcclxuICAgICAgICB9XHJcbiAgICAgIH0pXHJcbiAgICApO1xyXG4gIH1cclxuXHJcbiAgbm90Rmlyc3RBbmRFbXB0eTxUPihrZXk6IHN0cmluZywgaGFuZGxlcjogKHQ6IFQpID0+IHZvaWQpIHtcclxuICAgIHRoaXMuc3Vic2NyaXB0aW9ucy5hZGQoXHJcbiAgICAgIHRoaXMuc3ViamVjdC5zdWJzY3JpYmUoY2hhbmdlcyA9PiB7XHJcbiAgICAgICAgaWYgKGNoYW5nZXNba2V5XSAmJiAhY2hhbmdlc1trZXldLmlzRmlyc3RDaGFuZ2UoKSkge1xyXG4gICAgICAgICAgY29uc3QgdmFsdWU6IFQgPSBjaGFuZ2VzW2tleV0uY3VycmVudFZhbHVlO1xyXG4gICAgICAgICAgaWYgKHZhbHVlICE9PSB1bmRlZmluZWQgJiYgdmFsdWUgIT09IG51bGwpIHtcclxuICAgICAgICAgICAgaGFuZGxlcih2YWx1ZSk7XHJcbiAgICAgICAgICB9XHJcbiAgICAgICAgfVxyXG4gICAgICB9KVxyXG4gICAgKTtcclxuICB9XHJcbn1cclxuIl19
\ No newline at end of file
diff --git a/esm2022/lib/ngx-echarts.directive.mjs b/esm2022/lib/ngx-echarts.directive.mjs
index 76d4a6a162cdc5176da40f68133a4763934b46e9..8e5b1e35d5b04f16a03a1fdbd28af4523266929d 100644
--- a/esm2022/lib/ngx-echarts.directive.mjs
+++ b/esm2022/lib/ngx-echarts.directive.mjs
@@ -64,6 +64,9 @@ export class NgxEchartsDirective {
         this.resize$ = new Subject();
         this.changeFilter = new ChangeFilterV2();
         this.echarts = config.echarts;
+        if (!this.theme && config.theme) {
+            this.theme = config.theme;
+        }
     }
     ngOnChanges(changes) {
         this.changeFilter.doFilter(changes);
@@ -199,114 +202,114 @@ export class NgxEchartsDirective {
             };
         })));
     }
-    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsDirective, deps: [{ token: NGX_ECHARTS_CONFIG }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }
-    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.0.1", type: NgxEchartsDirective, isStandalone: true, selector: "echarts, [echarts]", inputs: { options: "options", theme: "theme", initOpts: "initOpts", merge: "merge", autoResize: "autoResize", loading: "loading", loadingType: "loadingType", loadingOpts: "loadingOpts" }, outputs: { chartInit: "chartInit", optionsError: "optionsError", chartClick: "chartClick", chartDblClick: "chartDblClick", chartMouseDown: "chartMouseDown", chartMouseMove: "chartMouseMove", chartMouseUp: "chartMouseUp", chartMouseOver: "chartMouseOver", chartMouseOut: "chartMouseOut", chartGlobalOut: "chartGlobalOut", chartContextMenu: "chartContextMenu", chartHighlight: "chartHighlight", chartDownplay: "chartDownplay", chartSelectChanged: "chartSelectChanged", chartLegendSelectChanged: "chartLegendSelectChanged", chartLegendSelected: "chartLegendSelected", chartLegendUnselected: "chartLegendUnselected", chartLegendLegendSelectAll: "chartLegendLegendSelectAll", chartLegendLegendInverseSelect: "chartLegendLegendInverseSelect", chartLegendScroll: "chartLegendScroll", chartDataZoom: "chartDataZoom", chartDataRangeSelected: "chartDataRangeSelected", chartGraphRoam: "chartGraphRoam", chartGeoRoam: "chartGeoRoam", chartTreeRoam: "chartTreeRoam", chartTimelineChanged: "chartTimelineChanged", chartTimelinePlayChanged: "chartTimelinePlayChanged", chartRestore: "chartRestore", chartDataViewChanged: "chartDataViewChanged", chartMagicTypeChanged: "chartMagicTypeChanged", chartGeoSelectChanged: "chartGeoSelectChanged", chartGeoSelected: "chartGeoSelected", chartGeoUnselected: "chartGeoUnselected", chartAxisAreaSelected: "chartAxisAreaSelected", chartBrush: "chartBrush", chartBrushEnd: "chartBrushEnd", chartBrushSelected: "chartBrushSelected", chartGlobalCursorTaken: "chartGlobalCursorTaken", chartRendered: "chartRendered", chartFinished: "chartFinished" }, exportAs: ["echarts"], usesOnChanges: true, ngImport: i0 }); }
+    static { this.ɵfac = function NgxEchartsDirective_Factory(t) { return new (t || NgxEchartsDirective)(i0.ɵɵdirectiveInject(NGX_ECHARTS_CONFIG), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); }; }
+    static { this.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: NgxEchartsDirective, selectors: [["echarts"], ["", "echarts", ""]], inputs: { options: "options", theme: "theme", initOpts: "initOpts", merge: "merge", autoResize: "autoResize", loading: "loading", loadingType: "loadingType", loadingOpts: "loadingOpts" }, outputs: { chartInit: "chartInit", optionsError: "optionsError", chartClick: "chartClick", chartDblClick: "chartDblClick", chartMouseDown: "chartMouseDown", chartMouseMove: "chartMouseMove", chartMouseUp: "chartMouseUp", chartMouseOver: "chartMouseOver", chartMouseOut: "chartMouseOut", chartGlobalOut: "chartGlobalOut", chartContextMenu: "chartContextMenu", chartHighlight: "chartHighlight", chartDownplay: "chartDownplay", chartSelectChanged: "chartSelectChanged", chartLegendSelectChanged: "chartLegendSelectChanged", chartLegendSelected: "chartLegendSelected", chartLegendUnselected: "chartLegendUnselected", chartLegendLegendSelectAll: "chartLegendLegendSelectAll", chartLegendLegendInverseSelect: "chartLegendLegendInverseSelect", chartLegendScroll: "chartLegendScroll", chartDataZoom: "chartDataZoom", chartDataRangeSelected: "chartDataRangeSelected", chartGraphRoam: "chartGraphRoam", chartGeoRoam: "chartGeoRoam", chartTreeRoam: "chartTreeRoam", chartTimelineChanged: "chartTimelineChanged", chartTimelinePlayChanged: "chartTimelinePlayChanged", chartRestore: "chartRestore", chartDataViewChanged: "chartDataViewChanged", chartMagicTypeChanged: "chartMagicTypeChanged", chartGeoSelectChanged: "chartGeoSelectChanged", chartGeoSelected: "chartGeoSelected", chartGeoUnselected: "chartGeoUnselected", chartAxisAreaSelected: "chartAxisAreaSelected", chartBrush: "chartBrush", chartBrushEnd: "chartBrushEnd", chartBrushSelected: "chartBrushSelected", chartGlobalCursorTaken: "chartGlobalCursorTaken", chartRendered: "chartRendered", chartFinished: "chartFinished" }, exportAs: ["echarts"], standalone: true, features: [i0.ɵɵNgOnChangesFeature] }); }
 }
-i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsDirective, decorators: [{
-            type: Directive,
-            args: [{
-                    standalone: true,
-                    selector: 'echarts, [echarts]',
-                    exportAs: 'echarts',
-                }]
-        }], ctorParameters: () => [{ type: undefined, decorators: [{
-                    type: Inject,
-                    args: [NGX_ECHARTS_CONFIG]
-                }] }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { options: [{
-                type: Input
-            }], theme: [{
-                type: Input
-            }], initOpts: [{
-                type: Input
-            }], merge: [{
-                type: Input
-            }], autoResize: [{
-                type: Input
-            }], loading: [{
-                type: Input
-            }], loadingType: [{
-                type: Input
-            }], loadingOpts: [{
-                type: Input
-            }], chartInit: [{
-                type: Output
-            }], optionsError: [{
-                type: Output
-            }], chartClick: [{
-                type: Output
-            }], chartDblClick: [{
-                type: Output
-            }], chartMouseDown: [{
-                type: Output
-            }], chartMouseMove: [{
-                type: Output
-            }], chartMouseUp: [{
-                type: Output
-            }], chartMouseOver: [{
-                type: Output
-            }], chartMouseOut: [{
-                type: Output
-            }], chartGlobalOut: [{
-                type: Output
-            }], chartContextMenu: [{
-                type: Output
-            }], chartHighlight: [{
-                type: Output
-            }], chartDownplay: [{
-                type: Output
-            }], chartSelectChanged: [{
-                type: Output
-            }], chartLegendSelectChanged: [{
-                type: Output
-            }], chartLegendSelected: [{
-                type: Output
-            }], chartLegendUnselected: [{
-                type: Output
-            }], chartLegendLegendSelectAll: [{
-                type: Output
-            }], chartLegendLegendInverseSelect: [{
-                type: Output
-            }], chartLegendScroll: [{
-                type: Output
-            }], chartDataZoom: [{
-                type: Output
-            }], chartDataRangeSelected: [{
-                type: Output
-            }], chartGraphRoam: [{
-                type: Output
-            }], chartGeoRoam: [{
-                type: Output
-            }], chartTreeRoam: [{
-                type: Output
-            }], chartTimelineChanged: [{
-                type: Output
-            }], chartTimelinePlayChanged: [{
-                type: Output
-            }], chartRestore: [{
-                type: Output
-            }], chartDataViewChanged: [{
-                type: Output
-            }], chartMagicTypeChanged: [{
-                type: Output
-            }], chartGeoSelectChanged: [{
-                type: Output
-            }], chartGeoSelected: [{
-                type: Output
-            }], chartGeoUnselected: [{
-                type: Output
-            }], chartAxisAreaSelected: [{
-                type: Output
-            }], chartBrush: [{
-                type: Output
-            }], chartBrushEnd: [{
-                type: Output
-            }], chartBrushSelected: [{
-                type: Output
-            }], chartGlobalCursorTaken: [{
-                type: Output
-            }], chartRendered: [{
-                type: Output
-            }], chartFinished: [{
-                type: Output
-            }] } });
-//# sourceMappingURL=data:application/json;base64,
\ No newline at end of file
+(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(NgxEchartsDirective, [{
+        type: Directive,
+        args: [{
+                standalone: true,
+                selector: 'echarts, [echarts]',
+                exportAs: 'echarts',
+            }]
+    }], () => [{ type: undefined, decorators: [{
+                type: Inject,
+                args: [NGX_ECHARTS_CONFIG]
+            }] }, { type: i0.ElementRef }, { type: i0.NgZone }], { options: [{
+            type: Input
+        }], theme: [{
+            type: Input
+        }], initOpts: [{
+            type: Input
+        }], merge: [{
+            type: Input
+        }], autoResize: [{
+            type: Input
+        }], loading: [{
+            type: Input
+        }], loadingType: [{
+            type: Input
+        }], loadingOpts: [{
+            type: Input
+        }], chartInit: [{
+            type: Output
+        }], optionsError: [{
+            type: Output
+        }], chartClick: [{
+            type: Output
+        }], chartDblClick: [{
+            type: Output
+        }], chartMouseDown: [{
+            type: Output
+        }], chartMouseMove: [{
+            type: Output
+        }], chartMouseUp: [{
+            type: Output
+        }], chartMouseOver: [{
+            type: Output
+        }], chartMouseOut: [{
+            type: Output
+        }], chartGlobalOut: [{
+            type: Output
+        }], chartContextMenu: [{
+            type: Output
+        }], chartHighlight: [{
+            type: Output
+        }], chartDownplay: [{
+            type: Output
+        }], chartSelectChanged: [{
+            type: Output
+        }], chartLegendSelectChanged: [{
+            type: Output
+        }], chartLegendSelected: [{
+            type: Output
+        }], chartLegendUnselected: [{
+            type: Output
+        }], chartLegendLegendSelectAll: [{
+            type: Output
+        }], chartLegendLegendInverseSelect: [{
+            type: Output
+        }], chartLegendScroll: [{
+            type: Output
+        }], chartDataZoom: [{
+            type: Output
+        }], chartDataRangeSelected: [{
+            type: Output
+        }], chartGraphRoam: [{
+            type: Output
+        }], chartGeoRoam: [{
+            type: Output
+        }], chartTreeRoam: [{
+            type: Output
+        }], chartTimelineChanged: [{
+            type: Output
+        }], chartTimelinePlayChanged: [{
+            type: Output
+        }], chartRestore: [{
+            type: Output
+        }], chartDataViewChanged: [{
+            type: Output
+        }], chartMagicTypeChanged: [{
+            type: Output
+        }], chartGeoSelectChanged: [{
+            type: Output
+        }], chartGeoSelected: [{
+            type: Output
+        }], chartGeoUnselected: [{
+            type: Output
+        }], chartAxisAreaSelected: [{
+            type: Output
+        }], chartBrush: [{
+            type: Output
+        }], chartBrushEnd: [{
+            type: Output
+        }], chartBrushSelected: [{
+            type: Output
+        }], chartGlobalCursorTaken: [{
+            type: Output
+        }], chartRendered: [{
+            type: Output
+        }], chartFinished: [{
+            type: Output
+        }] }); })();
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVjaGFydHMuZGlyZWN0aXZlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWVjaGFydHMvc3JjL2xpYi9uZ3gtZWNoYXJ0cy5kaXJlY3RpdmUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUVMLFNBQVMsRUFFVCxZQUFZLEVBQ1osTUFBTSxFQUNOLGNBQWMsRUFDZCxLQUFLLEVBS0wsTUFBTSxHQUVQLE1BQU0sZUFBZSxDQUFDO0FBQ3ZCLE9BQU8sRUFBRSxVQUFVLEVBQUUsYUFBYSxFQUFFLE9BQU8sRUFBZ0IsY0FBYyxFQUFFLE1BQU0sTUFBTSxDQUFDO0FBQ3hGLE9BQU8sRUFBRSxTQUFTLEVBQUUsWUFBWSxFQUFFLE1BQU0sZ0JBQWdCLENBQUM7QUFDekQsT0FBTyxFQUFFLGNBQWMsRUFBRSxNQUFNLG9CQUFvQixDQUFDOztBQVVwRCxNQUFNLENBQUMsTUFBTSxrQkFBa0IsR0FBRyxJQUFJLGNBQWMsQ0FBbUIsb0JBQW9CLENBQUMsQ0FBQztBQU83RixNQUFNLE9BQU8sbUJBQW1CO0lBeUU5QixZQUM4QixNQUF3QixFQUM1QyxFQUFjLEVBQ2QsTUFBYztRQURkLE9BQUUsR0FBRixFQUFFLENBQVk7UUFDZCxXQUFNLEdBQU4sTUFBTSxDQUFRO1FBM0VmLFlBQU8sR0FBeUIsSUFBSSxDQUFDO1FBQ3JDLFVBQUssR0FBZ0MsSUFBSSxDQUFDO1FBQzFDLGFBQVEsR0FNTixJQUFJLENBQUM7UUFDUCxVQUFLLEdBQXlCLElBQUksQ0FBQztRQUNuQyxlQUFVLEdBQUcsSUFBSSxDQUFDO1FBQ2xCLFlBQU8sR0FBRyxLQUFLLENBQUM7UUFDaEIsZ0JBQVcsR0FBRyxTQUFTLENBQUM7UUFDeEIsZ0JBQVcsR0FBa0IsSUFBSSxDQUFDO1FBRTNDLHFCQUFxQjtRQUNYLGNBQVMsR0FBRyxJQUFJLFlBQVksRUFBTyxDQUFDO1FBQ3BDLGlCQUFZLEdBQUcsSUFBSSxZQUFZLEVBQVMsQ0FBQztRQUVuRCx1QkFBdUI7UUFDYixlQUFVLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBaUIsT0FBTyxDQUFDLENBQUM7UUFDM0Qsa0JBQWEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFpQixVQUFVLENBQUMsQ0FBQztRQUNqRSxtQkFBYyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQWlCLFdBQVcsQ0FBQyxDQUFDO1FBQ25FLG1CQUFjLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBaUIsV0FBVyxDQUFDLENBQUM7UUFDbkUsaUJBQVksR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFpQixTQUFTLENBQUMsQ0FBQztRQUMvRCxtQkFBYyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQWlCLFdBQVcsQ0FBQyxDQUFDO1FBQ25FLGtCQUFhLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBaUIsVUFBVSxDQUFDLENBQUM7UUFDakUsbUJBQWMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFpQixXQUFXLENBQUMsQ0FBQztRQUNuRSxxQkFBZ0IsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFpQixhQUFhLENBQUMsQ0FBQztRQUVqRixpQkFBaUI7UUFDUCxtQkFBYyxHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sV0FBVyxDQUFDLENBQUM7UUFDeEQsa0JBQWEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLFVBQVUsQ0FBQyxDQUFDO1FBQ3RELHVCQUFrQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sZUFBZSxDQUFDLENBQUM7UUFDaEUsNkJBQXdCLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxxQkFBcUIsQ0FBQyxDQUFDO1FBQzVFLHdCQUFtQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sZ0JBQWdCLENBQUMsQ0FBQztRQUNsRSwwQkFBcUIsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLGtCQUFrQixDQUFDLENBQUM7UUFDdEUsK0JBQTBCLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxpQkFBaUIsQ0FBQyxDQUFDO1FBQzFFLG1DQUE4QixHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0scUJBQXFCLENBQUMsQ0FBQztRQUNsRixzQkFBaUIsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLGNBQWMsQ0FBQyxDQUFDO1FBQzlELGtCQUFhLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxVQUFVLENBQUMsQ0FBQztRQUN0RCwyQkFBc0IsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLG1CQUFtQixDQUFDLENBQUM7UUFDeEUsbUJBQWMsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLFdBQVcsQ0FBQyxDQUFDO1FBQ3hELGlCQUFZLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxTQUFTLENBQUMsQ0FBQztRQUNwRCxrQkFBYSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sVUFBVSxDQUFDLENBQUM7UUFDdEQseUJBQW9CLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3BFLDZCQUF3QixHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0scUJBQXFCLENBQUMsQ0FBQztRQUM1RSxpQkFBWSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sU0FBUyxDQUFDLENBQUM7UUFDcEQseUJBQW9CLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxpQkFBaUIsQ0FBQyxDQUFDO1FBQ3BFLDBCQUFxQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sa0JBQWtCLENBQUMsQ0FBQztRQUN0RSwwQkFBcUIsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLGtCQUFrQixDQUFDLENBQUM7UUFDdEUscUJBQWdCLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxhQUFhLENBQUMsQ0FBQztRQUM1RCx1QkFBa0IsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLGVBQWUsQ0FBQyxDQUFDO1FBQ2hFLDBCQUFxQixHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sa0JBQWtCLENBQUMsQ0FBQztRQUN0RSxlQUFVLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxPQUFPLENBQUMsQ0FBQztRQUNoRCxrQkFBYSxHQUFHLElBQUksQ0FBQyxlQUFlLENBQU0sVUFBVSxDQUFDLENBQUM7UUFDdEQsdUJBQWtCLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxlQUFlLENBQUMsQ0FBQztRQUNoRSwyQkFBc0IsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLG1CQUFtQixDQUFDLENBQUM7UUFDeEUsa0JBQWEsR0FBRyxJQUFJLENBQUMsZUFBZSxDQUFNLFVBQVUsQ0FBQyxDQUFDO1FBQ3RELGtCQUFhLEdBQUcsSUFBSSxDQUFDLGVBQWUsQ0FBTSxVQUFVLENBQUMsQ0FBQztRQUV6RCxxQkFBZ0IsR0FBRyxJQUFJLENBQUM7UUFFdkIsV0FBTSxHQUFHLElBQUksYUFBYSxDQUFVLENBQUMsQ0FBQyxDQUFDO1FBR3ZDLFlBQU8sR0FBRyxJQUFJLE9BQU8sRUFBUSxDQUFDO1FBRzlCLGlCQUFZLEdBQUcsSUFBSSxjQUFjLEVBQUUsQ0FBQztRQVExQyxJQUFJLENBQUMsT0FBTyxHQUFHLE1BQU0sQ0FBQyxPQUFPLENBQUM7UUFDOUIsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLElBQUksTUFBTSxDQUFDLEtBQUssRUFBRTtZQUMvQixJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sQ0FBQyxLQUFLLENBQUM7U0FDM0I7SUFDSCxDQUFDO0lBRUQsV0FBVyxDQUFDLE9BQXNCO1FBQ2hDLElBQUksQ0FBQyxZQUFZLENBQUMsUUFBUSxDQUFDLE9BQU8sQ0FBQyxDQUFDO0lBQ3RDLENBQUM7SUFFRCxRQUFRO1FBQ04sSUFBSSxDQUFDLE1BQU0sQ0FBQyxjQUFjLEVBQUU7WUFDMUIsTUFBTSxJQUFJLEtBQUssQ0FBQyw4Q0FBOEMsQ0FBQyxDQUFDO1NBQ2pFO1FBQ0QsSUFBSSxDQUFDLFNBQVMsR0FBRyxJQUFJLENBQUMsT0FBTzthQUMxQixJQUFJLENBQUMsWUFBWSxDQUFDLEdBQUcsRUFBRSxjQUFjLEVBQUUsRUFBRSxPQUFPLEVBQUUsS0FBSyxFQUFFLFFBQVEsRUFBRSxJQUFJLEVBQUUsQ0FBQyxDQUFDO2FBQzNFLFNBQVMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUMsQ0FBQztRQUVsQyxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUMzQyxHQUFHLEVBQUUsQ0FDSCxJQUFJLE1BQU0sQ0FBQyxjQUFjLENBQUMsR0FBRyxFQUFFO2dCQUM3QixJQUFJLENBQUMsZ0JBQWdCLEdBQUcsTUFBTSxDQUFDLHFCQUFxQixDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsSUFBSSxFQUFFLENBQUMsQ0FBQztZQUNsRixDQUFDLENBQUMsQ0FDTCxDQUFDO1lBQ0YsSUFBSSxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsSUFBSSxDQUFDLEVBQUUsQ0FBQyxhQUFhLENBQUMsQ0FBQztTQUM5QztRQUVELElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsU0FBUyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLGVBQWUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ2hGLElBQUksQ0FBQyxZQUFZLENBQUMsZ0JBQWdCLENBQUMsT0FBTyxFQUFFLEdBQUcsQ0FBQyxFQUFFLENBQUMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDO1FBQ3hFLElBQUksQ0FBQyxZQUFZLENBQUMsR0FBRyxDQUFVLFNBQVMsRUFBRSxDQUFDLENBQUMsRUFBRSxDQUFDLElBQUksQ0FBQyxhQUFhLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUM7UUFDeEUsSUFBSSxDQUFDLFlBQVksQ0FBQyxRQUFRLENBQXVCLE9BQU8sRUFBRSxHQUFHLEVBQUUsQ0FBQyxJQUFJLENBQUMsWUFBWSxFQUFFLENBQUMsQ0FBQztJQUN2RixDQUFDO0lBRUQsV0FBVztRQUNULE1BQU0sQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLGNBQWMsQ0FBQyxDQUFDO1FBQ3pDLElBQUksSUFBSSxDQUFDLFNBQVMsRUFBRTtZQUNsQixJQUFJLENBQUMsU0FBUyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzlCO1FBQ0QsSUFBSSxJQUFJLENBQUMsZ0JBQWdCLEVBQUU7WUFDekIsTUFBTSxDQUFDLG9CQUFvQixDQUFDLElBQUksQ0FBQyxnQkFBZ0IsQ0FBQyxDQUFDO1NBQ3BEO1FBQ0QsSUFBSSxJQUFJLENBQUMsUUFBUSxFQUFFO1lBQ2pCLElBQUksQ0FBQyxRQUFRLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDLENBQUM7U0FDaEQ7UUFDRCxJQUFJLElBQUksQ0FBQyxVQUFVLEVBQUU7WUFDbkIsSUFBSSxDQUFDLFVBQVUsQ0FBQyxXQUFXLEVBQUUsQ0FBQztTQUMvQjtRQUNELElBQUksQ0FBQyxZQUFZLENBQUMsT0FBTyxFQUFFLENBQUM7UUFDNUIsSUFBSSxDQUFDLE9BQU8sRUFBRSxDQUFDO0lBQ2pCLENBQUM7SUFFRCxlQUFlO1FBQ2IsSUFBSSxDQUFDLGNBQWMsR0FBRyxNQUFNLENBQUMsVUFBVSxDQUFDLEdBQUcsRUFBRSxDQUFDLElBQUksQ0FBQyxTQUFTLEVBQUUsQ0FBQyxDQUFDO0lBQ2xFLENBQUM7SUFFTyxPQUFPO1FBQ2IsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsVUFBVSxFQUFFLEVBQUU7Z0JBQzVCLElBQUksQ0FBQyxLQUFLLENBQUMsT0FBTyxFQUFFLENBQUM7YUFDdEI7WUFDRCxJQUFJLENBQUMsS0FBSyxHQUFHLElBQUksQ0FBQztTQUNuQjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILE1BQU07UUFDSixJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxJQUFJLENBQUMsS0FBSyxDQUFDLE1BQU0sRUFBRSxDQUFDO1NBQ3JCO0lBQ0gsQ0FBQztJQUVPLGFBQWEsQ0FBQyxPQUFnQjtRQUNwQyxJQUFJLElBQUksQ0FBQyxLQUFLLEVBQUU7WUFDZCxPQUFPO2dCQUNMLENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUM7Z0JBQzVELENBQUMsQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUFDO1NBQzlCO2FBQU07WUFDTCxJQUFJLENBQUMsVUFBVSxHQUFHLElBQUksQ0FBQyxNQUFNLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxFQUFFLENBQzlDLE9BQU8sQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsQ0FBQyxJQUFJLENBQUMsV0FBVyxFQUFFLElBQUksQ0FBQyxXQUFXLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLFdBQVcsRUFBRSxDQUN0RixDQUFDO1NBQ0g7SUFDSCxDQUFDO0lBRU8sU0FBUyxDQUFDLE1BQVcsRUFBRSxJQUFVO1FBQ3ZDLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtZQUNkLElBQUk7Z0JBQ0YsSUFBSSxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsTUFBTSxFQUFFLElBQUksQ0FBQyxDQUFDO2FBQ3BDO1lBQUMsT0FBTyxDQUFDLEVBQUU7Z0JBQ1YsT0FBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztnQkFDakIsSUFBSSxDQUFDLFlBQVksQ0FBQyxJQUFJLENBQUMsQ0FBQyxDQUFDLENBQUM7YUFDM0I7U0FDRjtJQUNILENBQUM7SUFFRDs7T0FFRztJQUNILEtBQUssQ0FBQyxZQUFZO1FBQ2hCLElBQUksQ0FBQyxPQUFPLEVBQUUsQ0FBQztRQUNmLE1BQU0sSUFBSSxDQUFDLFNBQVMsRUFBRSxDQUFDO0lBQ3pCLENBQUM7SUFFTyxXQUFXO1FBQ2pCLE1BQU0sR0FBRyxHQUFHLElBQUksQ0FBQyxFQUFFLENBQUMsYUFBYSxDQUFDO1FBRWxDLElBQUksTUFBTSxJQUFJLE1BQU0sQ0FBQyxnQkFBZ0IsRUFBRTtZQUNyQyxNQUFNLElBQUksR0FBRyxNQUFNLENBQUMsZ0JBQWdCLENBQUMsR0FBRyxFQUFFLElBQUksQ0FBQyxDQUFDLGdCQUFnQixDQUFDLFFBQVEsQ0FBQyxDQUFDO1lBQzNFLElBQUksQ0FBQyxDQUFDLElBQUksSUFBSSxJQUFJLEtBQUssS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxJQUFJLEdBQUcsQ0FBQyxLQUFLLENBQUMsTUFBTSxLQUFLLEtBQUssQ0FBQyxFQUFFO2dCQUNsRixHQUFHLENBQUMsS0FBSyxDQUFDLE1BQU0sR0FBRyxPQUFPLENBQUM7YUFDNUI7U0FDRjtRQUVELGdJQUFnSTtRQUNoSSwyRkFBMkY7UUFDM0YsT0FBTyxJQUFJLENBQUMsTUFBTSxDQUFDLGlCQUFpQixDQUFDLEdBQUcsRUFBRTtZQUN4QyxNQUFNLElBQUksR0FDUixPQUFPLElBQUksQ0FBQyxPQUFPLEtBQUssVUFBVSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxDQUFDLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxPQUFPLENBQUMsT0FBTyxDQUFDLElBQUksQ0FBQyxPQUFPLENBQUMsQ0FBQztZQUUxRixPQUFPLElBQUksRUFBRSxDQUFDLElBQUksQ0FBQyxDQUFDLEVBQUUsSUFBSSxFQUFFLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxHQUFHLEVBQUUsSUFBSSxDQUFDLEtBQUssRUFBRSxJQUFJLENBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQztRQUN6RSxDQUFDLENBQUMsQ0FBQztJQUNMLENBQUM7SUFFTyxLQUFLLENBQUMsU0FBUztRQUNyQixNQUFNLElBQUksQ0FBQyxlQUFlLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxDQUFDO1FBRXpDLElBQUksSUFBSSxDQUFDLEtBQUssSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQzVCLElBQUksQ0FBQyxTQUFTLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzVCO0lBQ0gsQ0FBQztJQUVPLEtBQUssQ0FBQyxlQUFlLENBQUMsR0FBUTtRQUNwQyxJQUFJLENBQUMsR0FBRyxFQUFFO1lBQ1IsT0FBTztTQUNSO1FBRUQsSUFBSSxJQUFJLENBQUMsS0FBSyxFQUFFO1lBQ2QsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3BDO2FBQU07WUFDTCxJQUFJLENBQUMsS0FBSyxHQUFHLE1BQU0sSUFBSSxDQUFDLFdBQVcsRUFBRSxDQUFDO1lBQ3RDLElBQUksQ0FBQyxNQUFNLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxLQUFLLENBQUMsQ0FBQztZQUM3QixJQUFJLENBQUMsU0FBUyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDLENBQUM7WUFDaEMsSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQUMsT0FBTyxFQUFFLElBQUksQ0FBQyxDQUFDO1NBQ3BDO0lBQ0gsQ0FBQztJQUVELDJHQUEyRztJQUMzRyx1SEFBdUg7SUFDL0csZUFBZSxDQUFJLFNBQWlCO1FBQzFDLE9BQU8sSUFBSSxDQUFDLFNBQVMsQ0FBQyxJQUFJLENBQ3hCLFNBQVMsQ0FDUCxDQUFDLEtBQVUsRUFBRSxFQUFFLENBQ2IsSUFBSSxVQUFVLENBQUMsUUFBUSxDQUFDLEVBQUU7WUFDeEIsS0FBSyxDQUFDLEVBQUUsQ0FBQyxTQUFTLEVBQUUsQ0FBQyxJQUFPLEVBQUUsRUFBRSxDQUFDLElBQUksQ0FBQyxNQUFNLENBQUMsR0FBRyxDQUFDLEdBQUcsRUFBRSxDQUFDLFFBQVEsQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLENBQUMsQ0FBQyxDQUFDO1lBQzdFLE9BQU8sR0FBRyxFQUFFO2dCQUNWLElBQUksSUFBSSxDQUFDLEtBQUssRUFBRTtvQkFDZCxJQUFJLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxVQUFVLEVBQUUsRUFBRTt3QkFDNUIsS0FBSyxDQUFDLEdBQUcsQ0FBQyxTQUFTLENBQUMsQ0FBQztxQkFDdEI7aUJBQ0Y7WUFDSCxDQUFDLENBQUM7UUFDSixDQUFDLENBQUMsQ0FDTCxDQUNpQixDQUFDO0lBQ3ZCLENBQUM7b0ZBcFBVLG1CQUFtQix1QkEwRXBCLGtCQUFrQjtvRUExRWpCLG1CQUFtQjs7aUZBQW5CLG1CQUFtQjtjQUwvQixTQUFTO2VBQUM7Z0JBQ1QsVUFBVSxFQUFFLElBQUk7Z0JBQ2hCLFFBQVEsRUFBRSxvQkFBb0I7Z0JBQzlCLFFBQVEsRUFBRSxTQUFTO2FBQ3BCOztzQkEyRUksTUFBTTt1QkFBQyxrQkFBa0I7bUVBekVuQixPQUFPO2tCQUFmLEtBQUs7WUFDRyxLQUFLO2tCQUFiLEtBQUs7WUFDRyxRQUFRO2tCQUFoQixLQUFLO1lBT0csS0FBSztrQkFBYixLQUFLO1lBQ0csVUFBVTtrQkFBbEIsS0FBSztZQUNHLE9BQU87a0JBQWYsS0FBSztZQUNHLFdBQVc7a0JBQW5CLEtBQUs7WUFDRyxXQUFXO2tCQUFuQixLQUFLO1lBR0ksU0FBUztrQkFBbEIsTUFBTTtZQUNHLFlBQVk7a0JBQXJCLE1BQU07WUFHRyxVQUFVO2tCQUFuQixNQUFNO1lBQ0csYUFBYTtrQkFBdEIsTUFBTTtZQUNHLGNBQWM7a0JBQXZCLE1BQU07WUFDRyxjQUFjO2tCQUF2QixNQUFNO1lBQ0csWUFBWTtrQkFBckIsTUFBTTtZQUNHLGNBQWM7a0JBQXZCLE1BQU07WUFDRyxhQUFhO2tCQUF0QixNQUFNO1lBQ0csY0FBYztrQkFBdkIsTUFBTTtZQUNHLGdCQUFnQjtrQkFBekIsTUFBTTtZQUdHLGNBQWM7a0JBQXZCLE1BQU07WUFDRyxhQUFhO2tCQUF0QixNQUFNO1lBQ0csa0JBQWtCO2tCQUEzQixNQUFNO1lBQ0csd0JBQXdCO2tCQUFqQyxNQUFNO1lBQ0csbUJBQW1CO2tCQUE1QixNQUFNO1lBQ0cscUJBQXFCO2tCQUE5QixNQUFNO1lBQ0csMEJBQTBCO2tCQUFuQyxNQUFNO1lBQ0csOEJBQThCO2tCQUF2QyxNQUFNO1lBQ0csaUJBQWlCO2tCQUExQixNQUFNO1lBQ0csYUFBYTtrQkFBdEIsTUFBTTtZQUNHLHNCQUFzQjtrQkFBL0IsTUFBTTtZQUNHLGNBQWM7a0JBQXZCLE1BQU07WUFDRyxZQUFZO2tCQUFyQixNQUFNO1lBQ0csYUFBYTtrQkFBdEIsTUFBTTtZQUNHLG9CQUFvQjtrQkFBN0IsTUFBTTtZQUNHLHdCQUF3QjtrQkFBakMsTUFBTTtZQUNHLFlBQVk7a0JBQXJCLE1BQU07WUFDRyxvQkFBb0I7a0JBQTdCLE1BQU07WUFDRyxxQkFBcUI7a0JBQTlCLE1BQU07WUFDRyxxQkFBcUI7a0JBQTlCLE1BQU07WUFDRyxnQkFBZ0I7a0JBQXpCLE1BQU07WUFDRyxrQkFBa0I7a0JBQTNCLE1BQU07WUFDRyxxQkFBcUI7a0JBQTlCLE1BQU07WUFDRyxVQUFVO2tCQUFuQixNQUFNO1lBQ0csYUFBYTtrQkFBdEIsTUFBTTtZQUNHLGtCQUFrQjtrQkFBM0IsTUFBTTtZQUNHLHNCQUFzQjtrQkFBL0IsTUFBTTtZQUNHLGFBQWE7a0JBQXRCLE1BQU07WUFDRyxhQUFhO2tCQUF0QixNQUFNIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHtcclxuICBBZnRlclZpZXdJbml0LFxyXG4gIERpcmVjdGl2ZSxcclxuICBFbGVtZW50UmVmLFxyXG4gIEV2ZW50RW1pdHRlcixcclxuICBJbmplY3QsXHJcbiAgSW5qZWN0aW9uVG9rZW4sXHJcbiAgSW5wdXQsXHJcbiAgTmdab25lLFxyXG4gIE9uQ2hhbmdlcyxcclxuICBPbkRlc3Ryb3ksXHJcbiAgT25Jbml0LFxyXG4gIE91dHB1dCxcclxuICBTaW1wbGVDaGFuZ2VzLFxyXG59IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xyXG5pbXBvcnQgeyBPYnNlcnZhYmxlLCBSZXBsYXlTdWJqZWN0LCBTdWJqZWN0LCBTdWJzY3JpcHRpb24sIGFzeW5jU2NoZWR1bGVyIH0gZnJvbSAncnhqcyc7XHJcbmltcG9ydCB7IHN3aXRjaE1hcCwgdGhyb3R0bGVUaW1lIH0gZnJvbSAncnhqcy9vcGVyYXRvcnMnO1xyXG5pbXBvcnQgeyBDaGFuZ2VGaWx0ZXJWMiB9IGZyb20gJy4vY2hhbmdlLWZpbHRlci12Mic7XHJcbmltcG9ydCB0eXBlIHsgRUNoYXJ0c09wdGlvbiwgRUNoYXJ0cywgRUNFbGVtZW50RXZlbnQgfSBmcm9tICdlY2hhcnRzJztcclxuXHJcbmV4cG9ydCBpbnRlcmZhY2UgTmd4RWNoYXJ0c0NvbmZpZyB7XHJcbiAgZWNoYXJ0czogYW55IHwgKCgpID0+IFByb21pc2U8YW55Pik7XHJcbiAgdGhlbWU/OiBzdHJpbmcgfCBUaGVtZU9wdGlvbjtcclxufVxyXG5cclxuZXhwb3J0IHR5cGUgVGhlbWVPcHRpb24gPSBSZWNvcmQ8c3RyaW5nLCBhbnk+O1xyXG5cclxuZXhwb3J0IGNvbnN0IE5HWF9FQ0hBUlRTX0NPTkZJRyA9IG5ldyBJbmplY3Rpb25Ub2tlbjxOZ3hFY2hhcnRzQ29uZmlnPignTkdYX0VDSEFSVFNfQ09ORklHJyk7XHJcblxyXG5ARGlyZWN0aXZlKHtcclxuICBzdGFuZGFsb25lOiB0cnVlLFxyXG4gIHNlbGVjdG9yOiAnZWNoYXJ0cywgW2VjaGFydHNdJyxcclxuICBleHBvcnRBczogJ2VjaGFydHMnLFxyXG59KVxyXG5leHBvcnQgY2xhc3MgTmd4RWNoYXJ0c0RpcmVjdGl2ZSBpbXBsZW1lbnRzIE9uQ2hhbmdlcywgT25EZXN0cm95LCBPbkluaXQsIEFmdGVyVmlld0luaXQge1xyXG4gIEBJbnB1dCgpIG9wdGlvbnM6IEVDaGFydHNPcHRpb24gfCBudWxsID0gbnVsbDtcclxuICBASW5wdXQoKSB0aGVtZTogc3RyaW5nIHwgVGhlbWVPcHRpb24gfCBudWxsID0gbnVsbDtcclxuICBASW5wdXQoKSBpbml0T3B0czoge1xyXG4gICAgZGV2aWNlUGl4ZWxSYXRpbz86IG51bWJlcjtcclxuICAgIHJlbmRlcmVyPzogc3RyaW5nO1xyXG4gICAgd2lkdGg/OiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICBoZWlnaHQ/OiBudW1iZXIgfCBzdHJpbmc7XHJcbiAgICBsb2NhbGU/OiBzdHJpbmc7XHJcbiAgfSB8IG51bGwgPSBudWxsO1xyXG4gIEBJbnB1dCgpIG1lcmdlOiBFQ2hhcnRzT3B0aW9uIHwgbnVsbCA9IG51bGw7XHJcbiAgQElucHV0KCkgYXV0b1Jlc2l6ZSA9IHRydWU7XHJcbiAgQElucHV0KCkgbG9hZGluZyA9IGZhbHNlO1xyXG4gIEBJbnB1dCgpIGxvYWRpbmdUeXBlID0gJ2RlZmF1bHQnO1xyXG4gIEBJbnB1dCgpIGxvYWRpbmdPcHRzOiBvYmplY3QgfCBudWxsID0gbnVsbDtcclxuXHJcbiAgLy8gbmd4LWVjaGFydHMgZXZlbnRzXHJcbiAgQE91dHB1dCgpIGNoYXJ0SW5pdCA9IG5ldyBFdmVudEVtaXR0ZXI8YW55PigpO1xyXG4gIEBPdXRwdXQoKSBvcHRpb25zRXJyb3IgPSBuZXcgRXZlbnRFbWl0dGVyPEVycm9yPigpO1xyXG5cclxuICAvLyBlY2hhcnRzIG1vdXNlIGV2ZW50c1xyXG4gIEBPdXRwdXQoKSBjaGFydENsaWNrID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8RUNFbGVtZW50RXZlbnQ+KCdjbGljaycpO1xyXG4gIEBPdXRwdXQoKSBjaGFydERibENsaWNrID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8RUNFbGVtZW50RXZlbnQ+KCdkYmxjbGljaycpO1xyXG4gIEBPdXRwdXQoKSBjaGFydE1vdXNlRG93biA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PEVDRWxlbWVudEV2ZW50PignbW91c2Vkb3duJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0TW91c2VNb3ZlID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8RUNFbGVtZW50RXZlbnQ+KCdtb3VzZW1vdmUnKTtcclxuICBAT3V0cHV0KCkgY2hhcnRNb3VzZVVwID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8RUNFbGVtZW50RXZlbnQ+KCdtb3VzZXVwJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0TW91c2VPdmVyID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8RUNFbGVtZW50RXZlbnQ+KCdtb3VzZW92ZXInKTtcclxuICBAT3V0cHV0KCkgY2hhcnRNb3VzZU91dCA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PEVDRWxlbWVudEV2ZW50PignbW91c2VvdXQnKTtcclxuICBAT3V0cHV0KCkgY2hhcnRHbG9iYWxPdXQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxFQ0VsZW1lbnRFdmVudD4oJ2dsb2JhbG91dCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydENvbnRleHRNZW51ID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8RUNFbGVtZW50RXZlbnQ+KCdjb250ZXh0bWVudScpO1xyXG5cclxuICAvLyBlY2hhcnRzIGV2ZW50c1xyXG4gIEBPdXRwdXQoKSBjaGFydEhpZ2hsaWdodCA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ2hpZ2hsaWdodCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydERvd25wbGF5ID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8YW55PignZG93bnBsYXknKTtcclxuICBAT3V0cHV0KCkgY2hhcnRTZWxlY3RDaGFuZ2VkID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8YW55Pignc2VsZWN0Y2hhbmdlZCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydExlZ2VuZFNlbGVjdENoYW5nZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdsZWdlbmRzZWxlY3RjaGFuZ2VkJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0TGVnZW5kU2VsZWN0ZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdsZWdlbmRzZWxlY3RlZCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydExlZ2VuZFVuc2VsZWN0ZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdsZWdlbmR1bnNlbGVjdGVkJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0TGVnZW5kTGVnZW5kU2VsZWN0QWxsID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8YW55PignbGVnZW5kc2VsZWN0YWxsJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0TGVnZW5kTGVnZW5kSW52ZXJzZVNlbGVjdCA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ2xlZ2VuZGludmVyc2VzZWxlY3QnKTtcclxuICBAT3V0cHV0KCkgY2hhcnRMZWdlbmRTY3JvbGwgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdsZWdlbmRzY3JvbGwnKTtcclxuICBAT3V0cHV0KCkgY2hhcnREYXRhWm9vbSA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ2RhdGF6b29tJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0RGF0YVJhbmdlU2VsZWN0ZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdkYXRhcmFuZ2VzZWxlY3RlZCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydEdyYXBoUm9hbSA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ2dyYXBocm9hbScpO1xyXG4gIEBPdXRwdXQoKSBjaGFydEdlb1JvYW0gPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdnZW9yb2FtJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0VHJlZVJvYW0gPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCd0cmVlcm9hbScpO1xyXG4gIEBPdXRwdXQoKSBjaGFydFRpbWVsaW5lQ2hhbmdlZCA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ3RpbWVsaW5lY2hhbmdlZCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydFRpbWVsaW5lUGxheUNoYW5nZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCd0aW1lbGluZXBsYXljaGFuZ2VkJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0UmVzdG9yZSA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ3Jlc3RvcmUnKTtcclxuICBAT3V0cHV0KCkgY2hhcnREYXRhVmlld0NoYW5nZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdkYXRhdmlld2NoYW5nZWQnKTtcclxuICBAT3V0cHV0KCkgY2hhcnRNYWdpY1R5cGVDaGFuZ2VkID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8YW55PignbWFnaWN0eXBlY2hhbmdlZCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydEdlb1NlbGVjdENoYW5nZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdnZW9zZWxlY3RjaGFuZ2VkJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0R2VvU2VsZWN0ZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdnZW9zZWxlY3RlZCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydEdlb1Vuc2VsZWN0ZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdnZW91bnNlbGVjdGVkJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0QXhpc0FyZWFTZWxlY3RlZCA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ2F4aXNhcmVhc2VsZWN0ZWQnKTtcclxuICBAT3V0cHV0KCkgY2hhcnRCcnVzaCA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ2JydXNoJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0QnJ1c2hFbmQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdicnVzaGVuZCcpO1xyXG4gIEBPdXRwdXQoKSBjaGFydEJydXNoU2VsZWN0ZWQgPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdicnVzaHNlbGVjdGVkJyk7XHJcbiAgQE91dHB1dCgpIGNoYXJ0R2xvYmFsQ3Vyc29yVGFrZW4gPSB0aGlzLmNyZWF0ZUxhenlFdmVudDxhbnk+KCdnbG9iYWxjdXJzb3J0YWtlbicpO1xyXG4gIEBPdXRwdXQoKSBjaGFydFJlbmRlcmVkID0gdGhpcy5jcmVhdGVMYXp5RXZlbnQ8YW55PigncmVuZGVyZWQnKTtcclxuICBAT3V0cHV0KCkgY2hhcnRGaW5pc2hlZCA9IHRoaXMuY3JlYXRlTGF6eUV2ZW50PGFueT4oJ2ZpbmlzaGVkJyk7XHJcblxyXG4gIHB1YmxpYyBhbmltYXRpb25GcmFtZUlEID0gbnVsbDtcclxuICBwcml2YXRlIGNoYXJ0OiBFQ2hhcnRzO1xyXG4gIHByaXZhdGUgY2hhcnQkID0gbmV3IFJlcGxheVN1YmplY3Q8RUNoYXJ0cz4oMSk7XHJcbiAgcHJpdmF0ZSBlY2hhcnRzOiBhbnk7XHJcbiAgcHJpdmF0ZSByZXNpemVPYjogUmVzaXplT2JzZXJ2ZXI7XHJcbiAgcHJpdmF0ZSByZXNpemUkID0gbmV3IFN1YmplY3Q8dm9pZD4oKTtcclxuICBwcml2YXRlIHJlc2l6ZVN1YjogU3Vic2NyaXB0aW9uO1xyXG4gIHByaXZhdGUgaW5pdENoYXJ0VGltZXI/OiBudW1iZXI7XHJcbiAgcHJpdmF0ZSBjaGFuZ2VGaWx0ZXIgPSBuZXcgQ2hhbmdlRmlsdGVyVjIoKTtcclxuICBwcml2YXRlIGxvYWRpbmdTdWI6IFN1YnNjcmlwdGlvbjtcclxuXHJcbiAgY29uc3RydWN0b3IoXHJcbiAgICBASW5qZWN0KE5HWF9FQ0hBUlRTX0NPTkZJRykgY29uZmlnOiBOZ3hFY2hhcnRzQ29uZmlnLFxyXG4gICAgcHJpdmF0ZSBlbDogRWxlbWVudFJlZixcclxuICAgIHByaXZhdGUgbmdab25lOiBOZ1pvbmVcclxuICApIHtcclxuICAgIHRoaXMuZWNoYXJ0cyA9IGNvbmZpZy5lY2hhcnRzO1xyXG4gICAgaWYgKCF0aGlzLnRoZW1lICYmIGNvbmZpZy50aGVtZSkge1xyXG4gICAgICB0aGlzLnRoZW1lID0gY29uZmlnLnRoZW1lO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgbmdPbkNoYW5nZXMoY2hhbmdlczogU2ltcGxlQ2hhbmdlcykge1xyXG4gICAgdGhpcy5jaGFuZ2VGaWx0ZXIuZG9GaWx0ZXIoY2hhbmdlcyk7XHJcbiAgfVxyXG5cclxuICBuZ09uSW5pdCgpIHtcclxuICAgIGlmICghd2luZG93LlJlc2l6ZU9ic2VydmVyKSB7XHJcbiAgICAgIHRocm93IG5ldyBFcnJvcigncGxlYXNlIGluc3RhbGwgYSBwb2x5ZmlsbCBmb3IgUmVzaXplT2JzZXJ2ZXInKTtcclxuICAgIH1cclxuICAgIHRoaXMucmVzaXplU3ViID0gdGhpcy5yZXNpemUkXHJcbiAgICAgIC5waXBlKHRocm90dGxlVGltZSgxMDAsIGFzeW5jU2NoZWR1bGVyLCB7IGxlYWRpbmc6IGZhbHNlLCB0cmFpbGluZzogdHJ1ZSB9KSlcclxuICAgICAgLnN1YnNjcmliZSgoKSA9PiB0aGlzLnJlc2l6ZSgpKTtcclxuXHJcbiAgICBpZiAodGhpcy5hdXRvUmVzaXplKSB7XHJcbiAgICAgIHRoaXMucmVzaXplT2IgPSB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcihcclxuICAgICAgICAoKSA9PlxyXG4gICAgICAgICAgbmV3IHdpbmRvdy5SZXNpemVPYnNlcnZlcigoKSA9PiB7XHJcbiAgICAgICAgICAgIHRoaXMuYW5pbWF0aW9uRnJhbWVJRCA9IHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUoKCkgPT4gdGhpcy5yZXNpemUkLm5leHQoKSk7XHJcbiAgICAgICAgICB9KVxyXG4gICAgICApO1xyXG4gICAgICB0aGlzLnJlc2l6ZU9iLm9ic2VydmUodGhpcy5lbC5uYXRpdmVFbGVtZW50KTtcclxuICAgIH1cclxuXHJcbiAgICB0aGlzLmNoYW5nZUZpbHRlci5ub3RGaXJzdEFuZEVtcHR5KCdvcHRpb25zJywgb3B0ID0+IHRoaXMub25PcHRpb25zQ2hhbmdlKG9wdCkpO1xyXG4gICAgdGhpcy5jaGFuZ2VGaWx0ZXIubm90Rmlyc3RBbmRFbXB0eSgnbWVyZ2UnLCBvcHQgPT4gdGhpcy5zZXRPcHRpb24ob3B0KSk7XHJcbiAgICB0aGlzLmNoYW5nZUZpbHRlci5oYXM8Ym9vbGVhbj4oJ2xvYWRpbmcnLCB2ID0+IHRoaXMudG9nZ2xlTG9hZGluZyghIXYpKTtcclxuICAgIHRoaXMuY2hhbmdlRmlsdGVyLm5vdEZpcnN0PHN0cmluZyB8IFRoZW1lT3B0aW9uPigndGhlbWUnLCAoKSA9PiB0aGlzLnJlZnJlc2hDaGFydCgpKTtcclxuICB9XHJcblxyXG4gIG5nT25EZXN0cm95KCkge1xyXG4gICAgd2luZG93LmNsZWFyVGltZW91dCh0aGlzLmluaXRDaGFydFRpbWVyKTtcclxuICAgIGlmICh0aGlzLnJlc2l6ZVN1Yikge1xyXG4gICAgICB0aGlzLnJlc2l6ZVN1Yi51bnN1YnNjcmliZSgpO1xyXG4gICAgfVxyXG4gICAgaWYgKHRoaXMuYW5pbWF0aW9uRnJhbWVJRCkge1xyXG4gICAgICB3aW5kb3cuY2FuY2VsQW5pbWF0aW9uRnJhbWUodGhpcy5hbmltYXRpb25GcmFtZUlEKTtcclxuICAgIH1cclxuICAgIGlmICh0aGlzLnJlc2l6ZU9iKSB7XHJcbiAgICAgIHRoaXMucmVzaXplT2IudW5vYnNlcnZlKHRoaXMuZWwubmF0aXZlRWxlbWVudCk7XHJcbiAgICB9XHJcbiAgICBpZiAodGhpcy5sb2FkaW5nU3ViKSB7XHJcbiAgICAgIHRoaXMubG9hZGluZ1N1Yi51bnN1YnNjcmliZSgpO1xyXG4gICAgfVxyXG4gICAgdGhpcy5jaGFuZ2VGaWx0ZXIuZGlzcG9zZSgpO1xyXG4gICAgdGhpcy5kaXNwb3NlKCk7XHJcbiAgfVxyXG5cclxuICBuZ0FmdGVyVmlld0luaXQoKSB7XHJcbiAgICB0aGlzLmluaXRDaGFydFRpbWVyID0gd2luZG93LnNldFRpbWVvdXQoKCkgPT4gdGhpcy5pbml0Q2hhcnQoKSk7XHJcbiAgfVxyXG5cclxuICBwcml2YXRlIGRpc3Bvc2UoKSB7XHJcbiAgICBpZiAodGhpcy5jaGFydCkge1xyXG4gICAgICBpZiAoIXRoaXMuY2hhcnQuaXNEaXNwb3NlZCgpKSB7XHJcbiAgICAgICAgdGhpcy5jaGFydC5kaXNwb3NlKCk7XHJcbiAgICAgIH1cclxuICAgICAgdGhpcy5jaGFydCA9IG51bGw7XHJcbiAgICB9XHJcbiAgfVxyXG5cclxuICAvKipcclxuICAgKiByZXNpemUgY2hhcnRcclxuICAgKi9cclxuICByZXNpemUoKSB7XHJcbiAgICBpZiAodGhpcy5jaGFydCkge1xyXG4gICAgICB0aGlzLmNoYXJ0LnJlc2l6ZSgpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSB0b2dnbGVMb2FkaW5nKGxvYWRpbmc6IGJvb2xlYW4pIHtcclxuICAgIGlmICh0aGlzLmNoYXJ0KSB7XHJcbiAgICAgIGxvYWRpbmdcclxuICAgICAgICA/IHRoaXMuY2hhcnQuc2hvd0xvYWRpbmcodGhpcy5sb2FkaW5nVHlwZSwgdGhpcy5sb2FkaW5nT3B0cylcclxuICAgICAgICA6IHRoaXMuY2hhcnQuaGlkZUxvYWRpbmcoKTtcclxuICAgIH0gZWxzZSB7XHJcbiAgICAgIHRoaXMubG9hZGluZ1N1YiA9IHRoaXMuY2hhcnQkLnN1YnNjcmliZShjaGFydCA9PlxyXG4gICAgICAgIGxvYWRpbmcgPyBjaGFydC5zaG93TG9hZGluZyh0aGlzLmxvYWRpbmdUeXBlLCB0aGlzLmxvYWRpbmdPcHRzKSA6IGNoYXJ0LmhpZGVMb2FkaW5nKClcclxuICAgICAgKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIHByaXZhdGUgc2V0T3B0aW9uKG9wdGlvbjogYW55LCBvcHRzPzogYW55KSB7XHJcbiAgICBpZiAodGhpcy5jaGFydCkge1xyXG4gICAgICB0cnkge1xyXG4gICAgICAgIHRoaXMuY2hhcnQuc2V0T3B0aW9uKG9wdGlvbiwgb3B0cyk7XHJcbiAgICAgIH0gY2F0Y2ggKGUpIHtcclxuICAgICAgICBjb25zb2xlLmVycm9yKGUpO1xyXG4gICAgICAgIHRoaXMub3B0aW9uc0Vycm9yLmVtaXQoZSk7XHJcbiAgICAgIH1cclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8qKlxyXG4gICAqIGRpc3Bvc2Ugb2xkIGNoYXJ0IGFuZCBjcmVhdGUgYSBuZXcgb25lLlxyXG4gICAqL1xyXG4gIGFzeW5jIHJlZnJlc2hDaGFydCgpIHtcclxuICAgIHRoaXMuZGlzcG9zZSgpO1xyXG4gICAgYXdhaXQgdGhpcy5pbml0Q2hhcnQoKTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgY3JlYXRlQ2hhcnQoKSB7XHJcbiAgICBjb25zdCBkb20gPSB0aGlzLmVsLm5hdGl2ZUVsZW1lbnQ7XHJcblxyXG4gICAgaWYgKHdpbmRvdyAmJiB3aW5kb3cuZ2V0Q29tcHV0ZWRTdHlsZSkge1xyXG4gICAgICBjb25zdCBwcm9wID0gd2luZG93LmdldENvbXB1dGVkU3R5bGUoZG9tLCBudWxsKS5nZXRQcm9wZXJ0eVZhbHVlKCdoZWlnaHQnKTtcclxuICAgICAgaWYgKCghcHJvcCB8fCBwcm9wID09PSAnMHB4JykgJiYgKCFkb20uc3R5bGUuaGVpZ2h0IHx8IGRvbS5zdHlsZS5oZWlnaHQgPT09ICcwcHgnKSkge1xyXG4gICAgICAgIGRvbS5zdHlsZS5oZWlnaHQgPSAnNDAwcHgnO1xyXG4gICAgICB9XHJcbiAgICB9XHJcblxyXG4gICAgLy8gaGVyZSBhIGJpdCB0cmlja3k6IHdlIGNoZWNrIGlmIHRoZSBlY2hhcnRzIG1vZHVsZSBpcyBwcm92aWRlZCBhcyBmdW5jdGlvbiByZXR1cm5pbmcgbmF0aXZlIGltcG9ydCgnLi4uJykgdGhlbiB1c2UgdGhlIHByb21pc2VcclxuICAgIC8vIG90aGVyd2lzZSBjcmVhdGUgdGhlIGZ1bmN0aW9uIHRoYXQgaW1pdGF0ZXMgYmVoYXZpb3VyIGFib3ZlIHdpdGggYSBwcm92aWRlZCBhcyBpcyBtb2R1bGVcclxuICAgIHJldHVybiB0aGlzLm5nWm9uZS5ydW5PdXRzaWRlQW5ndWxhcigoKSA9PiB7XHJcbiAgICAgIGNvbnN0IGxvYWQgPVxyXG4gICAgICAgIHR5cGVvZiB0aGlzLmVjaGFydHMgPT09ICdmdW5jdGlvbicgPyB0aGlzLmVjaGFydHMgOiAoKSA9PiBQcm9taXNlLnJlc29sdmUodGhpcy5lY2hhcnRzKTtcclxuXHJcbiAgICAgIHJldHVybiBsb2FkKCkudGhlbigoeyBpbml0IH0pID0+IGluaXQoZG9tLCB0aGlzLnRoZW1lLCB0aGlzLmluaXRPcHRzKSk7XHJcbiAgICB9KTtcclxuICB9XHJcblxyXG4gIHByaXZhdGUgYXN5bmMgaW5pdENoYXJ0KCkge1xyXG4gICAgYXdhaXQgdGhpcy5vbk9wdGlvbnNDaGFuZ2UodGhpcy5vcHRpb25zKTtcclxuXHJcbiAgICBpZiAodGhpcy5tZXJnZSAmJiB0aGlzLmNoYXJ0KSB7XHJcbiAgICAgIHRoaXMuc2V0T3B0aW9uKHRoaXMubWVyZ2UpO1xyXG4gICAgfVxyXG4gIH1cclxuXHJcbiAgcHJpdmF0ZSBhc3luYyBvbk9wdGlvbnNDaGFuZ2Uob3B0OiBhbnkpIHtcclxuICAgIGlmICghb3B0KSB7XHJcbiAgICAgIHJldHVybjtcclxuICAgIH1cclxuXHJcbiAgICBpZiAodGhpcy5jaGFydCkge1xyXG4gICAgICB0aGlzLnNldE9wdGlvbih0aGlzLm9wdGlvbnMsIHRydWUpO1xyXG4gICAgfSBlbHNlIHtcclxuICAgICAgdGhpcy5jaGFydCA9IGF3YWl0IHRoaXMuY3JlYXRlQ2hhcnQoKTtcclxuICAgICAgdGhpcy5jaGFydCQubmV4dCh0aGlzLmNoYXJ0KTtcclxuICAgICAgdGhpcy5jaGFydEluaXQuZW1pdCh0aGlzLmNoYXJ0KTtcclxuICAgICAgdGhpcy5zZXRPcHRpb24odGhpcy5vcHRpb25zLCB0cnVlKTtcclxuICAgIH1cclxuICB9XHJcblxyXG4gIC8vIGFsbG93cyB0byBsYXppbHkgYmluZCB0byBvbmx5IHRob3NlIGV2ZW50cyB0aGF0IGFyZSByZXF1ZXN0ZWQgdGhyb3VnaCB0aGUgYEBPdXRwdXRgIGJ5IHBhcmVudCBjb21wb25lbnRzXHJcbiAgLy8gc2VlIGh0dHBzOi8vc3RhY2tvdmVyZmxvdy5jb20vcXVlc3Rpb25zLzUxNzg3OTcyL29wdGltYWwtcmVlbnRlcmluZy10aGUtbmd6b25lLWZyb20tZXZlbnRlbWl0dGVyLWV2ZW50IGZvciBtb3JlIGluZm9cclxuICBwcml2YXRlIGNyZWF0ZUxhenlFdmVudDxUPihldmVudE5hbWU6IHN0cmluZyk6IEV2ZW50RW1pdHRlcjxUPiB7XHJcbiAgICByZXR1cm4gdGhpcy5jaGFydEluaXQucGlwZShcclxuICAgICAgc3dpdGNoTWFwKFxyXG4gICAgICAgIChjaGFydDogYW55KSA9PlxyXG4gICAgICAgICAgbmV3IE9ic2VydmFibGUob2JzZXJ2ZXIgPT4ge1xyXG4gICAgICAgICAgICBjaGFydC5vbihldmVudE5hbWUsIChkYXRhOiBUKSA9PiB0aGlzLm5nWm9uZS5ydW4oKCkgPT4gb2JzZXJ2ZXIubmV4dChkYXRhKSkpO1xyXG4gICAgICAgICAgICByZXR1cm4gKCkgPT4ge1xyXG4gICAgICAgICAgICAgIGlmICh0aGlzLmNoYXJ0KSB7XHJcbiAgICAgICAgICAgICAgICBpZiAoIXRoaXMuY2hhcnQuaXNEaXNwb3NlZCgpKSB7XHJcbiAgICAgICAgICAgICAgICAgIGNoYXJ0Lm9mZihldmVudE5hbWUpO1xyXG4gICAgICAgICAgICAgICAgfVxyXG4gICAgICAgICAgICAgIH1cclxuICAgICAgICAgICAgfTtcclxuICAgICAgICAgIH0pXHJcbiAgICAgIClcclxuICAgICkgYXMgRXZlbnRFbWl0dGVyPFQ+O1xyXG4gIH1cclxufVxyXG4iXX0=
\ No newline at end of file
diff --git a/esm2022/lib/ngx-echarts.module.mjs b/esm2022/lib/ngx-echarts.module.mjs
index 5cfc9b6eaae8d2a65f3a69839f94f7f29e723577..98a1fb173bd8de9adea4441e5bca53455ae21882 100644
--- a/esm2022/lib/ngx-echarts.module.mjs
+++ b/esm2022/lib/ngx-echarts.module.mjs
@@ -1,10 +1,13 @@
 import { NgModule } from '@angular/core';
 import { NgxEchartsDirective, NGX_ECHARTS_CONFIG, } from './ngx-echarts.directive';
 import * as i0 from "@angular/core";
-const provideEcharts = () => {
+const provideEcharts = (config) => {
     return {
         provide: NGX_ECHARTS_CONFIG,
-        useFactory: () => ({ echarts: () => import('echarts') }),
+        useFactory: () => ({
+            ...config,
+            echarts: () => import('echarts'),
+        }),
     };
 };
 const provideEchartsCore = (config) => {
@@ -25,16 +28,17 @@ export class NgxEchartsModule {
             ngModule: NgxEchartsModule,
         };
     }
-    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
-    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, imports: [NgxEchartsDirective], exports: [NgxEchartsDirective] }); }
-    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule }); }
+    static { this.ɵfac = function NgxEchartsModule_Factory(t) { return new (t || NgxEchartsModule)(); }; }
+    static { this.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: NgxEchartsModule }); }
+    static { this.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({}); }
 }
-i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, decorators: [{
-            type: NgModule,
-            args: [{
-                    imports: [NgxEchartsDirective],
-                    exports: [NgxEchartsDirective],
-                }]
-        }] });
+(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(NgxEchartsModule, [{
+        type: NgModule,
+        args: [{
+                imports: [NgxEchartsDirective],
+                exports: [NgxEchartsDirective],
+            }]
+    }], null, null); })();
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(NgxEchartsModule, { imports: [NgxEchartsDirective], exports: [NgxEchartsDirective] }); })();
 export { NgxEchartsDirective, NGX_ECHARTS_CONFIG, provideEcharts, provideEchartsCore };
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVjaGFydHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWVjaGFydHMvc3JjL2xpYi9uZ3gtZWNoYXJ0cy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBaUMsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUNMLG1CQUFtQixFQUVuQixrQkFBa0IsR0FFbkIsTUFBTSx5QkFBeUIsQ0FBQzs7QUFFakMsTUFBTSxjQUFjLEdBQUcsR0FBYSxFQUFFO0lBQ3BDLE9BQU87UUFDTCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLFVBQVUsRUFBRSxHQUFHLEVBQUUsQ0FBQyxDQUFDLEVBQUUsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsRUFBRSxDQUFDO0tBQ3pELENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLGtCQUFrQixHQUFHLENBQUMsTUFBd0IsRUFBWSxFQUFFO0lBQ2hFLE9BQU87UUFDTCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLFFBQVEsRUFBRSxNQUFNO0tBQ2pCLENBQUM7QUFDSixDQUFDLENBQUM7QUFNRixNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBd0I7UUFDckMsT0FBTztZQUNMLFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEMsQ0FBQztJQUNKLENBQUM7SUFDRCxNQUFNLENBQUMsUUFBUTtRQUNiLE9BQU87WUFDTCxRQUFRLEVBQUUsZ0JBQWdCO1NBQzNCLENBQUM7SUFDSixDQUFDOzhHQVhVLGdCQUFnQjsrR0FBaEIsZ0JBQWdCLFlBSGpCLG1CQUFtQixhQUNuQixtQkFBbUI7K0dBRWxCLGdCQUFnQjs7MkZBQWhCLGdCQUFnQjtrQkFKNUIsUUFBUTttQkFBQztvQkFDUixPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQztvQkFDOUIsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUM7aUJBQy9COztBQWVELE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxrQkFBa0IsRUFBZSxjQUFjLEVBQUUsa0JBQWtCLEVBQUUsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE5nTW9kdWxlLCBNb2R1bGVXaXRoUHJvdmlkZXJzLCBQcm92aWRlciB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHtcbiAgTmd4RWNoYXJ0c0RpcmVjdGl2ZSxcbiAgTmd4RWNoYXJ0c0NvbmZpZyxcbiAgTkdYX0VDSEFSVFNfQ09ORklHLFxuICBUaGVtZU9wdGlvbixcbn0gZnJvbSAnLi9uZ3gtZWNoYXJ0cy5kaXJlY3RpdmUnO1xuXG5jb25zdCBwcm92aWRlRWNoYXJ0cyA9ICgpOiBQcm92aWRlciA9PiB7XG4gIHJldHVybiB7XG4gICAgcHJvdmlkZTogTkdYX0VDSEFSVFNfQ09ORklHLFxuICAgIHVzZUZhY3Rvcnk6ICgpID0+ICh7IGVjaGFydHM6ICgpID0+IGltcG9ydCgnZWNoYXJ0cycpIH0pLFxuICB9O1xufTtcblxuY29uc3QgcHJvdmlkZUVjaGFydHNDb3JlID0gKGNvbmZpZzogTmd4RWNoYXJ0c0NvbmZpZyk6IFByb3ZpZGVyID0+IHtcbiAgcmV0dXJuIHtcbiAgICBwcm92aWRlOiBOR1hfRUNIQVJUU19DT05GSUcsXG4gICAgdXNlVmFsdWU6IGNvbmZpZyxcbiAgfTtcbn07XG5cbkBOZ01vZHVsZSh7XG4gIGltcG9ydHM6IFtOZ3hFY2hhcnRzRGlyZWN0aXZlXSxcbiAgZXhwb3J0czogW05neEVjaGFydHNEaXJlY3RpdmVdLFxufSlcbmV4cG9ydCBjbGFzcyBOZ3hFY2hhcnRzTW9kdWxlIHtcbiAgc3RhdGljIGZvclJvb3QoY29uZmlnOiBOZ3hFY2hhcnRzQ29uZmlnKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hFY2hhcnRzTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ3hFY2hhcnRzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbcHJvdmlkZUVjaGFydHNDb3JlKGNvbmZpZyldLFxuICAgIH07XG4gIH1cbiAgc3RhdGljIGZvckNoaWxkKCk6IE1vZHVsZVdpdGhQcm92aWRlcnM8Tmd4RWNoYXJ0c01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmd4RWNoYXJ0c01vZHVsZSxcbiAgICB9O1xuICB9XG59XG5cbmV4cG9ydCB7IE5neEVjaGFydHNEaXJlY3RpdmUsIE5HWF9FQ0hBUlRTX0NPTkZJRywgVGhlbWVPcHRpb24sIHByb3ZpZGVFY2hhcnRzLCBwcm92aWRlRWNoYXJ0c0NvcmUgfTtcbiJdfQ==
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmd4LWVjaGFydHMubW9kdWxlLmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vcHJvamVjdHMvbmd4LWVjaGFydHMvc3JjL2xpYi9uZ3gtZWNoYXJ0cy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBaUMsTUFBTSxlQUFlLENBQUM7QUFDeEUsT0FBTyxFQUNMLG1CQUFtQixFQUVuQixrQkFBa0IsR0FFbkIsTUFBTSx5QkFBeUIsQ0FBQzs7QUFFakMsTUFBTSxjQUFjLEdBQUcsQ0FBQyxNQUF5QyxFQUFZLEVBQUU7SUFDN0UsT0FBTztRQUNMLE9BQU8sRUFBRSxrQkFBa0I7UUFDM0IsVUFBVSxFQUFFLEdBQUcsRUFBRSxDQUFDLENBQUM7WUFDakIsR0FBRyxNQUFNO1lBQ1QsT0FBTyxFQUFFLEdBQUcsRUFBRSxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUM7U0FDakMsQ0FBQztLQUNILENBQUM7QUFDSixDQUFDLENBQUM7QUFFRixNQUFNLGtCQUFrQixHQUFHLENBQUMsTUFBd0IsRUFBWSxFQUFFO0lBQ2hFLE9BQU87UUFDTCxPQUFPLEVBQUUsa0JBQWtCO1FBQzNCLFFBQVEsRUFBRSxNQUFNO0tBQ2pCLENBQUM7QUFDSixDQUFDLENBQUM7QUFNRixNQUFNLE9BQU8sZ0JBQWdCO0lBQzNCLE1BQU0sQ0FBQyxPQUFPLENBQUMsTUFBd0I7UUFDckMsT0FBTztZQUNMLFFBQVEsRUFBRSxnQkFBZ0I7WUFDMUIsU0FBUyxFQUFFLENBQUMsa0JBQWtCLENBQUMsTUFBTSxDQUFDLENBQUM7U0FDeEMsQ0FBQztJQUNKLENBQUM7SUFDRCxNQUFNLENBQUMsUUFBUTtRQUNiLE9BQU87WUFDTCxRQUFRLEVBQUUsZ0JBQWdCO1NBQzNCLENBQUM7SUFDSixDQUFDO2lGQVhVLGdCQUFnQjttRUFBaEIsZ0JBQWdCOzs7aUZBQWhCLGdCQUFnQjtjQUo1QixRQUFRO2VBQUM7Z0JBQ1IsT0FBTyxFQUFFLENBQUMsbUJBQW1CLENBQUM7Z0JBQzlCLE9BQU8sRUFBRSxDQUFDLG1CQUFtQixDQUFDO2FBQy9COzt3RkFDWSxnQkFBZ0IsY0FIakIsbUJBQW1CLGFBQ25CLG1CQUFtQjtBQWdCL0IsT0FBTyxFQUFFLG1CQUFtQixFQUFFLGtCQUFrQixFQUFlLGNBQWMsRUFBRSxrQkFBa0IsRUFBRSxDQUFDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgTmdNb2R1bGUsIE1vZHVsZVdpdGhQcm92aWRlcnMsIFByb3ZpZGVyIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XHJcbmltcG9ydCB7XHJcbiAgTmd4RWNoYXJ0c0RpcmVjdGl2ZSxcclxuICBOZ3hFY2hhcnRzQ29uZmlnLFxyXG4gIE5HWF9FQ0hBUlRTX0NPTkZJRyxcclxuICBUaGVtZU9wdGlvbixcclxufSBmcm9tICcuL25neC1lY2hhcnRzLmRpcmVjdGl2ZSc7XHJcblxyXG5jb25zdCBwcm92aWRlRWNoYXJ0cyA9IChjb25maWc6IE9taXQ8Tmd4RWNoYXJ0c0NvbmZpZywgJ2VjaGFydHMnPik6IFByb3ZpZGVyID0+IHtcclxuICByZXR1cm4ge1xyXG4gICAgcHJvdmlkZTogTkdYX0VDSEFSVFNfQ09ORklHLFxyXG4gICAgdXNlRmFjdG9yeTogKCkgPT4gKHtcclxuICAgICAgLi4uY29uZmlnLFxyXG4gICAgICBlY2hhcnRzOiAoKSA9PiBpbXBvcnQoJ2VjaGFydHMnKSxcclxuICAgIH0pLFxyXG4gIH07XHJcbn07XHJcblxyXG5jb25zdCBwcm92aWRlRWNoYXJ0c0NvcmUgPSAoY29uZmlnOiBOZ3hFY2hhcnRzQ29uZmlnKTogUHJvdmlkZXIgPT4ge1xyXG4gIHJldHVybiB7XHJcbiAgICBwcm92aWRlOiBOR1hfRUNIQVJUU19DT05GSUcsXHJcbiAgICB1c2VWYWx1ZTogY29uZmlnLFxyXG4gIH07XHJcbn07XHJcblxyXG5ATmdNb2R1bGUoe1xyXG4gIGltcG9ydHM6IFtOZ3hFY2hhcnRzRGlyZWN0aXZlXSxcclxuICBleHBvcnRzOiBbTmd4RWNoYXJ0c0RpcmVjdGl2ZV0sXHJcbn0pXHJcbmV4cG9ydCBjbGFzcyBOZ3hFY2hhcnRzTW9kdWxlIHtcclxuICBzdGF0aWMgZm9yUm9vdChjb25maWc6IE5neEVjaGFydHNDb25maWcpOiBNb2R1bGVXaXRoUHJvdmlkZXJzPE5neEVjaGFydHNNb2R1bGU+IHtcclxuICAgIHJldHVybiB7XHJcbiAgICAgIG5nTW9kdWxlOiBOZ3hFY2hhcnRzTW9kdWxlLFxyXG4gICAgICBwcm92aWRlcnM6IFtwcm92aWRlRWNoYXJ0c0NvcmUoY29uZmlnKV0sXHJcbiAgICB9O1xyXG4gIH1cclxuICBzdGF0aWMgZm9yQ2hpbGQoKTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ3hFY2hhcnRzTW9kdWxlPiB7XHJcbiAgICByZXR1cm4ge1xyXG4gICAgICBuZ01vZHVsZTogTmd4RWNoYXJ0c01vZHVsZSxcclxuICAgIH07XHJcbiAgfVxyXG59XHJcblxyXG5leHBvcnQgeyBOZ3hFY2hhcnRzRGlyZWN0aXZlLCBOR1hfRUNIQVJUU19DT05GSUcsIFRoZW1lT3B0aW9uLCBwcm92aWRlRWNoYXJ0cywgcHJvdmlkZUVjaGFydHNDb3JlIH07XHJcbiJdfQ==
\ No newline at end of file
diff --git a/esm2022/public-api.mjs b/esm2022/public-api.mjs
index 5f0436db3468dbd43b3ede3dd7c9d1f3bfcb19fe..820a9c0f5cb02eea9af986cd10349a6e471705d9 100644
--- a/esm2022/public-api.mjs
+++ b/esm2022/public-api.mjs
@@ -2,4 +2,4 @@
  * Public API Surface of ngx-echarts
  */
 export * from './lib/ngx-echarts.module';
-//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC1lY2hhcnRzL3NyYy9wdWJsaWMtYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYywwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXG4gKiBQdWJsaWMgQVBJIFN1cmZhY2Ugb2Ygbmd4LWVjaGFydHNcbiAqL1xuXG5leHBvcnQgKiBmcm9tICcuL2xpYi9uZ3gtZWNoYXJ0cy5tb2R1bGUnO1xuIl19
\ No newline at end of file
+//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoicHVibGljLWFwaS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3Byb2plY3RzL25neC1lY2hhcnRzL3NyYy9wdWJsaWMtYXBpLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOztHQUVHO0FBRUgsY0FBYywwQkFBMEIsQ0FBQyIsInNvdXJjZXNDb250ZW50IjpbIi8qXHJcbiAqIFB1YmxpYyBBUEkgU3VyZmFjZSBvZiBuZ3gtZWNoYXJ0c1xyXG4gKi9cclxuXHJcbmV4cG9ydCAqIGZyb20gJy4vbGliL25neC1lY2hhcnRzLm1vZHVsZSc7XHJcbiJdfQ==
\ No newline at end of file
diff --git a/fesm2022/ngx-echarts.mjs b/fesm2022/ngx-echarts.mjs
index 9a9dc2a21d780087f35dfe9f16bbc18781d16cf4..d57817a996c0a0a54c2af5d3675f7ea251bed0e2 100644
--- a/fesm2022/ngx-echarts.mjs
+++ b/fesm2022/ngx-echarts.mjs
@@ -113,6 +113,9 @@ class NgxEchartsDirective {
         this.resize$ = new Subject();
         this.changeFilter = new ChangeFilterV2();
         this.echarts = config.echarts;
+        if (!this.theme && config.theme) {
+            this.theme = config.theme;
+        }
     }
     ngOnChanges(changes) {
         this.changeFilter.doFilter(changes);
@@ -248,121 +251,124 @@ class NgxEchartsDirective {
             };
         })));
     }
-    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsDirective, deps: [{ token: NGX_ECHARTS_CONFIG }, { token: i0.ElementRef }, { token: i0.NgZone }], target: i0.ɵɵFactoryTarget.Directive }); }
-    static { this.ɵdir = i0.ɵɵngDeclareDirective({ minVersion: "14.0.0", version: "17.0.1", type: NgxEchartsDirective, isStandalone: true, selector: "echarts, [echarts]", inputs: { options: "options", theme: "theme", initOpts: "initOpts", merge: "merge", autoResize: "autoResize", loading: "loading", loadingType: "loadingType", loadingOpts: "loadingOpts" }, outputs: { chartInit: "chartInit", optionsError: "optionsError", chartClick: "chartClick", chartDblClick: "chartDblClick", chartMouseDown: "chartMouseDown", chartMouseMove: "chartMouseMove", chartMouseUp: "chartMouseUp", chartMouseOver: "chartMouseOver", chartMouseOut: "chartMouseOut", chartGlobalOut: "chartGlobalOut", chartContextMenu: "chartContextMenu", chartHighlight: "chartHighlight", chartDownplay: "chartDownplay", chartSelectChanged: "chartSelectChanged", chartLegendSelectChanged: "chartLegendSelectChanged", chartLegendSelected: "chartLegendSelected", chartLegendUnselected: "chartLegendUnselected", chartLegendLegendSelectAll: "chartLegendLegendSelectAll", chartLegendLegendInverseSelect: "chartLegendLegendInverseSelect", chartLegendScroll: "chartLegendScroll", chartDataZoom: "chartDataZoom", chartDataRangeSelected: "chartDataRangeSelected", chartGraphRoam: "chartGraphRoam", chartGeoRoam: "chartGeoRoam", chartTreeRoam: "chartTreeRoam", chartTimelineChanged: "chartTimelineChanged", chartTimelinePlayChanged: "chartTimelinePlayChanged", chartRestore: "chartRestore", chartDataViewChanged: "chartDataViewChanged", chartMagicTypeChanged: "chartMagicTypeChanged", chartGeoSelectChanged: "chartGeoSelectChanged", chartGeoSelected: "chartGeoSelected", chartGeoUnselected: "chartGeoUnselected", chartAxisAreaSelected: "chartAxisAreaSelected", chartBrush: "chartBrush", chartBrushEnd: "chartBrushEnd", chartBrushSelected: "chartBrushSelected", chartGlobalCursorTaken: "chartGlobalCursorTaken", chartRendered: "chartRendered", chartFinished: "chartFinished" }, exportAs: ["echarts"], usesOnChanges: true, ngImport: i0 }); }
+    static { this.ɵfac = function NgxEchartsDirective_Factory(t) { return new (t || NgxEchartsDirective)(i0.ɵɵdirectiveInject(NGX_ECHARTS_CONFIG), i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.NgZone)); }; }
+    static { this.ɵdir = /*@__PURE__*/ i0.ɵɵdefineDirective({ type: NgxEchartsDirective, selectors: [["echarts"], ["", "echarts", ""]], inputs: { options: "options", theme: "theme", initOpts: "initOpts", merge: "merge", autoResize: "autoResize", loading: "loading", loadingType: "loadingType", loadingOpts: "loadingOpts" }, outputs: { chartInit: "chartInit", optionsError: "optionsError", chartClick: "chartClick", chartDblClick: "chartDblClick", chartMouseDown: "chartMouseDown", chartMouseMove: "chartMouseMove", chartMouseUp: "chartMouseUp", chartMouseOver: "chartMouseOver", chartMouseOut: "chartMouseOut", chartGlobalOut: "chartGlobalOut", chartContextMenu: "chartContextMenu", chartHighlight: "chartHighlight", chartDownplay: "chartDownplay", chartSelectChanged: "chartSelectChanged", chartLegendSelectChanged: "chartLegendSelectChanged", chartLegendSelected: "chartLegendSelected", chartLegendUnselected: "chartLegendUnselected", chartLegendLegendSelectAll: "chartLegendLegendSelectAll", chartLegendLegendInverseSelect: "chartLegendLegendInverseSelect", chartLegendScroll: "chartLegendScroll", chartDataZoom: "chartDataZoom", chartDataRangeSelected: "chartDataRangeSelected", chartGraphRoam: "chartGraphRoam", chartGeoRoam: "chartGeoRoam", chartTreeRoam: "chartTreeRoam", chartTimelineChanged: "chartTimelineChanged", chartTimelinePlayChanged: "chartTimelinePlayChanged", chartRestore: "chartRestore", chartDataViewChanged: "chartDataViewChanged", chartMagicTypeChanged: "chartMagicTypeChanged", chartGeoSelectChanged: "chartGeoSelectChanged", chartGeoSelected: "chartGeoSelected", chartGeoUnselected: "chartGeoUnselected", chartAxisAreaSelected: "chartAxisAreaSelected", chartBrush: "chartBrush", chartBrushEnd: "chartBrushEnd", chartBrushSelected: "chartBrushSelected", chartGlobalCursorTaken: "chartGlobalCursorTaken", chartRendered: "chartRendered", chartFinished: "chartFinished" }, exportAs: ["echarts"], standalone: true, features: [i0.ɵɵNgOnChangesFeature] }); }
 }
-i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsDirective, decorators: [{
-            type: Directive,
-            args: [{
-                    standalone: true,
-                    selector: 'echarts, [echarts]',
-                    exportAs: 'echarts',
-                }]
-        }], ctorParameters: () => [{ type: undefined, decorators: [{
-                    type: Inject,
-                    args: [NGX_ECHARTS_CONFIG]
-                }] }, { type: i0.ElementRef }, { type: i0.NgZone }], propDecorators: { options: [{
-                type: Input
-            }], theme: [{
-                type: Input
-            }], initOpts: [{
-                type: Input
-            }], merge: [{
-                type: Input
-            }], autoResize: [{
-                type: Input
-            }], loading: [{
-                type: Input
-            }], loadingType: [{
-                type: Input
-            }], loadingOpts: [{
-                type: Input
-            }], chartInit: [{
-                type: Output
-            }], optionsError: [{
-                type: Output
-            }], chartClick: [{
-                type: Output
-            }], chartDblClick: [{
-                type: Output
-            }], chartMouseDown: [{
-                type: Output
-            }], chartMouseMove: [{
-                type: Output
-            }], chartMouseUp: [{
-                type: Output
-            }], chartMouseOver: [{
-                type: Output
-            }], chartMouseOut: [{
-                type: Output
-            }], chartGlobalOut: [{
-                type: Output
-            }], chartContextMenu: [{
-                type: Output
-            }], chartHighlight: [{
-                type: Output
-            }], chartDownplay: [{
-                type: Output
-            }], chartSelectChanged: [{
-                type: Output
-            }], chartLegendSelectChanged: [{
-                type: Output
-            }], chartLegendSelected: [{
-                type: Output
-            }], chartLegendUnselected: [{
-                type: Output
-            }], chartLegendLegendSelectAll: [{
-                type: Output
-            }], chartLegendLegendInverseSelect: [{
-                type: Output
-            }], chartLegendScroll: [{
-                type: Output
-            }], chartDataZoom: [{
-                type: Output
-            }], chartDataRangeSelected: [{
-                type: Output
-            }], chartGraphRoam: [{
-                type: Output
-            }], chartGeoRoam: [{
-                type: Output
-            }], chartTreeRoam: [{
-                type: Output
-            }], chartTimelineChanged: [{
-                type: Output
-            }], chartTimelinePlayChanged: [{
-                type: Output
-            }], chartRestore: [{
-                type: Output
-            }], chartDataViewChanged: [{
-                type: Output
-            }], chartMagicTypeChanged: [{
-                type: Output
-            }], chartGeoSelectChanged: [{
-                type: Output
-            }], chartGeoSelected: [{
-                type: Output
-            }], chartGeoUnselected: [{
-                type: Output
-            }], chartAxisAreaSelected: [{
-                type: Output
-            }], chartBrush: [{
-                type: Output
-            }], chartBrushEnd: [{
-                type: Output
-            }], chartBrushSelected: [{
-                type: Output
-            }], chartGlobalCursorTaken: [{
-                type: Output
-            }], chartRendered: [{
-                type: Output
-            }], chartFinished: [{
-                type: Output
-            }] } });
+(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(NgxEchartsDirective, [{
+        type: Directive,
+        args: [{
+                standalone: true,
+                selector: 'echarts, [echarts]',
+                exportAs: 'echarts',
+            }]
+    }], () => [{ type: undefined, decorators: [{
+                type: Inject,
+                args: [NGX_ECHARTS_CONFIG]
+            }] }, { type: i0.ElementRef }, { type: i0.NgZone }], { options: [{
+            type: Input
+        }], theme: [{
+            type: Input
+        }], initOpts: [{
+            type: Input
+        }], merge: [{
+            type: Input
+        }], autoResize: [{
+            type: Input
+        }], loading: [{
+            type: Input
+        }], loadingType: [{
+            type: Input
+        }], loadingOpts: [{
+            type: Input
+        }], chartInit: [{
+            type: Output
+        }], optionsError: [{
+            type: Output
+        }], chartClick: [{
+            type: Output
+        }], chartDblClick: [{
+            type: Output
+        }], chartMouseDown: [{
+            type: Output
+        }], chartMouseMove: [{
+            type: Output
+        }], chartMouseUp: [{
+            type: Output
+        }], chartMouseOver: [{
+            type: Output
+        }], chartMouseOut: [{
+            type: Output
+        }], chartGlobalOut: [{
+            type: Output
+        }], chartContextMenu: [{
+            type: Output
+        }], chartHighlight: [{
+            type: Output
+        }], chartDownplay: [{
+            type: Output
+        }], chartSelectChanged: [{
+            type: Output
+        }], chartLegendSelectChanged: [{
+            type: Output
+        }], chartLegendSelected: [{
+            type: Output
+        }], chartLegendUnselected: [{
+            type: Output
+        }], chartLegendLegendSelectAll: [{
+            type: Output
+        }], chartLegendLegendInverseSelect: [{
+            type: Output
+        }], chartLegendScroll: [{
+            type: Output
+        }], chartDataZoom: [{
+            type: Output
+        }], chartDataRangeSelected: [{
+            type: Output
+        }], chartGraphRoam: [{
+            type: Output
+        }], chartGeoRoam: [{
+            type: Output
+        }], chartTreeRoam: [{
+            type: Output
+        }], chartTimelineChanged: [{
+            type: Output
+        }], chartTimelinePlayChanged: [{
+            type: Output
+        }], chartRestore: [{
+            type: Output
+        }], chartDataViewChanged: [{
+            type: Output
+        }], chartMagicTypeChanged: [{
+            type: Output
+        }], chartGeoSelectChanged: [{
+            type: Output
+        }], chartGeoSelected: [{
+            type: Output
+        }], chartGeoUnselected: [{
+            type: Output
+        }], chartAxisAreaSelected: [{
+            type: Output
+        }], chartBrush: [{
+            type: Output
+        }], chartBrushEnd: [{
+            type: Output
+        }], chartBrushSelected: [{
+            type: Output
+        }], chartGlobalCursorTaken: [{
+            type: Output
+        }], chartRendered: [{
+            type: Output
+        }], chartFinished: [{
+            type: Output
+        }] }); })();
 
-const provideEcharts = () => {
+const provideEcharts = (config) => {
     return {
         provide: NGX_ECHARTS_CONFIG,
-        useFactory: () => ({ echarts: () => import('echarts') }),
+        useFactory: () => ({
+            ...config,
+            echarts: () => import('echarts'),
+        }),
     };
 };
 const provideEchartsCore = (config) => {
@@ -383,17 +389,18 @@ class NgxEchartsModule {
             ngModule: NgxEchartsModule,
         };
     }
-    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule }); }
-    static { this.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: "14.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, imports: [NgxEchartsDirective], exports: [NgxEchartsDirective] }); }
-    static { this.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule }); }
+    static { this.ɵfac = function NgxEchartsModule_Factory(t) { return new (t || NgxEchartsModule)(); }; }
+    static { this.ɵmod = /*@__PURE__*/ i0.ɵɵdefineNgModule({ type: NgxEchartsModule }); }
+    static { this.ɵinj = /*@__PURE__*/ i0.ɵɵdefineInjector({}); }
 }
-i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "17.0.1", ngImport: i0, type: NgxEchartsModule, decorators: [{
-            type: NgModule,
-            args: [{
-                    imports: [NgxEchartsDirective],
-                    exports: [NgxEchartsDirective],
-                }]
-        }] });
+(() => { (typeof ngDevMode === "undefined" || ngDevMode) && i0.ɵsetClassMetadata(NgxEchartsModule, [{
+        type: NgModule,
+        args: [{
+                imports: [NgxEchartsDirective],
+                exports: [NgxEchartsDirective],
+            }]
+    }], null, null); })();
+(function () { (typeof ngJitMode === "undefined" || ngJitMode) && i0.ɵɵsetNgModuleScope(NgxEchartsModule, { imports: [NgxEchartsDirective], exports: [NgxEchartsDirective] }); })();
 
 /*
  * Public API Surface of ngx-echarts
diff --git a/fesm2022/ngx-echarts.mjs.map b/fesm2022/ngx-echarts.mjs.map
index 51f3596dc814f7fa8130f207a95952f9da0b7db3..f8f56489bf971cd5167d35c4f52b4e5ce420c7ce 100644
--- a/fesm2022/ngx-echarts.mjs.map
+++ b/fesm2022/ngx-echarts.mjs.map
@@ -1 +1 @@
-{"version":3,"file":"ngx-echarts.mjs","sources":["../../../projects/ngx-echarts/src/lib/change-filter-v2.ts","../../../projects/ngx-echarts/src/lib/ngx-echarts.directive.ts","../../../projects/ngx-echarts/src/lib/ngx-echarts.module.ts","../../../projects/ngx-echarts/src/public-api.ts","../../../projects/ngx-echarts/src/ngx-echarts.ts"],"sourcesContent":["import { SimpleChanges } from '@angular/core';\nimport { ReplaySubject, Subscription } from 'rxjs';\n\nexport class ChangeFilterV2 {\n  private subject = new ReplaySubject<SimpleChanges>(1);\n  private subscriptions: Subscription = new Subscription();\n\n  doFilter(changes: SimpleChanges) {\n    this.subject.next(changes);\n  }\n\n  dispose() {\n    this.subscriptions.unsubscribe();\n  }\n\n  notEmpty<T>(key: string, handler: (t: T) => void) {\n    this.subscriptions.add(\n      this.subject.subscribe(changes => {\n        if (changes[key]) {\n          const value: T = changes[key].currentValue;\n          if (value !== undefined && value !== null) {\n            handler(value);\n          }\n        }\n      })\n    );\n  }\n\n  has<T>(key: string, handler: (t: T) => void) {\n    this.subscriptions.add(\n      this.subject.subscribe(changes => {\n        if (changes[key]) {\n          const value: T = changes[key].currentValue;\n          handler(value);\n        }\n      })\n    );\n  }\n\n  notFirst<T>(key: string, handler: (t: T) => void) {\n    this.subscriptions.add(\n      this.subject.subscribe(changes => {\n        if (changes[key] && !changes[key].isFirstChange()) {\n          const value: T = changes[key].currentValue;\n          handler(value);\n        }\n      })\n    );\n  }\n\n  notFirstAndEmpty<T>(key: string, handler: (t: T) => void) {\n    this.subscriptions.add(\n      this.subject.subscribe(changes => {\n        if (changes[key] && !changes[key].isFirstChange()) {\n          const value: T = changes[key].currentValue;\n          if (value !== undefined && value !== null) {\n            handler(value);\n          }\n        }\n      })\n    );\n  }\n}\n","import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  EventEmitter,\n  Inject,\n  InjectionToken,\n  Input,\n  NgZone,\n  OnChanges,\n  OnDestroy,\n  OnInit,\n  Output,\n  SimpleChanges,\n} from '@angular/core';\nimport { Observable, ReplaySubject, Subject, Subscription, asyncScheduler } from 'rxjs';\nimport { switchMap, throttleTime } from 'rxjs/operators';\nimport { ChangeFilterV2 } from './change-filter-v2';\nimport type { EChartsOption, ECharts, ECElementEvent } from 'echarts';\n\nexport interface NgxEchartsConfig {\n  echarts: any | (() => Promise<any>);\n}\n\nexport type ThemeOption = Record<string, any>;\n\nexport const NGX_ECHARTS_CONFIG = new InjectionToken<NgxEchartsConfig>('NGX_ECHARTS_CONFIG');\n\n@Directive({\n  standalone: true,\n  selector: 'echarts, [echarts]',\n  exportAs: 'echarts',\n})\nexport class NgxEchartsDirective implements OnChanges, OnDestroy, OnInit, AfterViewInit {\n  @Input() options: EChartsOption | null = null;\n  @Input() theme: string | ThemeOption | null = null;\n  @Input() initOpts: {\n    devicePixelRatio?: number;\n    renderer?: string;\n    width?: number | string;\n    height?: number | string;\n    locale?: string;\n  } | null = null;\n  @Input() merge: EChartsOption | null = null;\n  @Input() autoResize = true;\n  @Input() loading = false;\n  @Input() loadingType = 'default';\n  @Input() loadingOpts: object | null = null;\n\n  // ngx-echarts events\n  @Output() chartInit = new EventEmitter<any>();\n  @Output() optionsError = new EventEmitter<Error>();\n\n  // echarts mouse events\n  @Output() chartClick = this.createLazyEvent<ECElementEvent>('click');\n  @Output() chartDblClick = this.createLazyEvent<ECElementEvent>('dblclick');\n  @Output() chartMouseDown = this.createLazyEvent<ECElementEvent>('mousedown');\n  @Output() chartMouseMove = this.createLazyEvent<ECElementEvent>('mousemove');\n  @Output() chartMouseUp = this.createLazyEvent<ECElementEvent>('mouseup');\n  @Output() chartMouseOver = this.createLazyEvent<ECElementEvent>('mouseover');\n  @Output() chartMouseOut = this.createLazyEvent<ECElementEvent>('mouseout');\n  @Output() chartGlobalOut = this.createLazyEvent<ECElementEvent>('globalout');\n  @Output() chartContextMenu = this.createLazyEvent<ECElementEvent>('contextmenu');\n\n  // echarts events\n  @Output() chartHighlight = this.createLazyEvent<any>('highlight');\n  @Output() chartDownplay = this.createLazyEvent<any>('downplay');\n  @Output() chartSelectChanged = this.createLazyEvent<any>('selectchanged');\n  @Output() chartLegendSelectChanged = this.createLazyEvent<any>('legendselectchanged');\n  @Output() chartLegendSelected = this.createLazyEvent<any>('legendselected');\n  @Output() chartLegendUnselected = this.createLazyEvent<any>('legendunselected');\n  @Output() chartLegendLegendSelectAll = this.createLazyEvent<any>('legendselectall');\n  @Output() chartLegendLegendInverseSelect = this.createLazyEvent<any>('legendinverseselect');\n  @Output() chartLegendScroll = this.createLazyEvent<any>('legendscroll');\n  @Output() chartDataZoom = this.createLazyEvent<any>('datazoom');\n  @Output() chartDataRangeSelected = this.createLazyEvent<any>('datarangeselected');\n  @Output() chartGraphRoam = this.createLazyEvent<any>('graphroam');\n  @Output() chartGeoRoam = this.createLazyEvent<any>('georoam');\n  @Output() chartTreeRoam = this.createLazyEvent<any>('treeroam');\n  @Output() chartTimelineChanged = this.createLazyEvent<any>('timelinechanged');\n  @Output() chartTimelinePlayChanged = this.createLazyEvent<any>('timelineplaychanged');\n  @Output() chartRestore = this.createLazyEvent<any>('restore');\n  @Output() chartDataViewChanged = this.createLazyEvent<any>('dataviewchanged');\n  @Output() chartMagicTypeChanged = this.createLazyEvent<any>('magictypechanged');\n  @Output() chartGeoSelectChanged = this.createLazyEvent<any>('geoselectchanged');\n  @Output() chartGeoSelected = this.createLazyEvent<any>('geoselected');\n  @Output() chartGeoUnselected = this.createLazyEvent<any>('geounselected');\n  @Output() chartAxisAreaSelected = this.createLazyEvent<any>('axisareaselected');\n  @Output() chartBrush = this.createLazyEvent<any>('brush');\n  @Output() chartBrushEnd = this.createLazyEvent<any>('brushend');\n  @Output() chartBrushSelected = this.createLazyEvent<any>('brushselected');\n  @Output() chartGlobalCursorTaken = this.createLazyEvent<any>('globalcursortaken');\n  @Output() chartRendered = this.createLazyEvent<any>('rendered');\n  @Output() chartFinished = this.createLazyEvent<any>('finished');\n\n  public animationFrameID = null;\n  private chart: ECharts;\n  private chart$ = new ReplaySubject<ECharts>(1);\n  private echarts: any;\n  private resizeOb: ResizeObserver;\n  private resize$ = new Subject<void>();\n  private resizeSub: Subscription;\n  private initChartTimer?: number;\n  private changeFilter = new ChangeFilterV2();\n  private loadingSub: Subscription;\n\n  constructor(\n    @Inject(NGX_ECHARTS_CONFIG) config: NgxEchartsConfig,\n    private el: ElementRef,\n    private ngZone: NgZone\n  ) {\n    this.echarts = config.echarts;\n  }\n\n  ngOnChanges(changes: SimpleChanges) {\n    this.changeFilter.doFilter(changes);\n  }\n\n  ngOnInit() {\n    if (!window.ResizeObserver) {\n      throw new Error('please install a polyfill for ResizeObserver');\n    }\n    this.resizeSub = this.resize$\n      .pipe(throttleTime(100, asyncScheduler, { leading: false, trailing: true }))\n      .subscribe(() => this.resize());\n\n    if (this.autoResize) {\n      this.resizeOb = this.ngZone.runOutsideAngular(\n        () =>\n          new window.ResizeObserver(() => {\n            this.animationFrameID = window.requestAnimationFrame(() => this.resize$.next());\n          })\n      );\n      this.resizeOb.observe(this.el.nativeElement);\n    }\n\n    this.changeFilter.notFirstAndEmpty('options', opt => this.onOptionsChange(opt));\n    this.changeFilter.notFirstAndEmpty('merge', opt => this.setOption(opt));\n    this.changeFilter.has<boolean>('loading', v => this.toggleLoading(!!v));\n    this.changeFilter.notFirst<string | ThemeOption>('theme', () => this.refreshChart());\n  }\n\n  ngOnDestroy() {\n    window.clearTimeout(this.initChartTimer);\n    if (this.resizeSub) {\n      this.resizeSub.unsubscribe();\n    }\n    if (this.animationFrameID) {\n      window.cancelAnimationFrame(this.animationFrameID);\n    }\n    if (this.resizeOb) {\n      this.resizeOb.unobserve(this.el.nativeElement);\n    }\n    if (this.loadingSub) {\n      this.loadingSub.unsubscribe();\n    }\n    this.changeFilter.dispose();\n    this.dispose();\n  }\n\n  ngAfterViewInit() {\n    this.initChartTimer = window.setTimeout(() => this.initChart());\n  }\n\n  private dispose() {\n    if (this.chart) {\n      if (!this.chart.isDisposed()) {\n        this.chart.dispose();\n      }\n      this.chart = null;\n    }\n  }\n\n  /**\n   * resize chart\n   */\n  resize() {\n    if (this.chart) {\n      this.chart.resize();\n    }\n  }\n\n  private toggleLoading(loading: boolean) {\n    if (this.chart) {\n      loading\n        ? this.chart.showLoading(this.loadingType, this.loadingOpts)\n        : this.chart.hideLoading();\n    } else {\n      this.loadingSub = this.chart$.subscribe(chart =>\n        loading ? chart.showLoading(this.loadingType, this.loadingOpts) : chart.hideLoading()\n      );\n    }\n  }\n\n  private setOption(option: any, opts?: any) {\n    if (this.chart) {\n      try {\n        this.chart.setOption(option, opts);\n      } catch (e) {\n        console.error(e);\n        this.optionsError.emit(e);\n      }\n    }\n  }\n\n  /**\n   * dispose old chart and create a new one.\n   */\n  async refreshChart() {\n    this.dispose();\n    await this.initChart();\n  }\n\n  private createChart() {\n    const dom = this.el.nativeElement;\n\n    if (window && window.getComputedStyle) {\n      const prop = window.getComputedStyle(dom, null).getPropertyValue('height');\n      if ((!prop || prop === '0px') && (!dom.style.height || dom.style.height === '0px')) {\n        dom.style.height = '400px';\n      }\n    }\n\n    // here a bit tricky: we check if the echarts module is provided as function returning native import('...') then use the promise\n    // otherwise create the function that imitates behaviour above with a provided as is module\n    return this.ngZone.runOutsideAngular(() => {\n      const load =\n        typeof this.echarts === 'function' ? this.echarts : () => Promise.resolve(this.echarts);\n\n      return load().then(({ init }) => init(dom, this.theme, this.initOpts));\n    });\n  }\n\n  private async initChart() {\n    await this.onOptionsChange(this.options);\n\n    if (this.merge && this.chart) {\n      this.setOption(this.merge);\n    }\n  }\n\n  private async onOptionsChange(opt: any) {\n    if (!opt) {\n      return;\n    }\n\n    if (this.chart) {\n      this.setOption(this.options, true);\n    } else {\n      this.chart = await this.createChart();\n      this.chart$.next(this.chart);\n      this.chartInit.emit(this.chart);\n      this.setOption(this.options, true);\n    }\n  }\n\n  // allows to lazily bind to only those events that are requested through the `@Output` by parent components\n  // see https://stackoverflow.com/questions/51787972/optimal-reentering-the-ngzone-from-eventemitter-event for more info\n  private createLazyEvent<T>(eventName: string): EventEmitter<T> {\n    return this.chartInit.pipe(\n      switchMap(\n        (chart: any) =>\n          new Observable(observer => {\n            chart.on(eventName, (data: T) => this.ngZone.run(() => observer.next(data)));\n            return () => {\n              if (this.chart) {\n                if (!this.chart.isDisposed()) {\n                  chart.off(eventName);\n                }\n              }\n            };\n          })\n      )\n    ) as EventEmitter<T>;\n  }\n}\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\nimport {\n  NgxEchartsDirective,\n  NgxEchartsConfig,\n  NGX_ECHARTS_CONFIG,\n  ThemeOption,\n} from './ngx-echarts.directive';\n\nconst provideEcharts = (): Provider => {\n  return {\n    provide: NGX_ECHARTS_CONFIG,\n    useFactory: () => ({ echarts: () => import('echarts') }),\n  };\n};\n\nconst provideEchartsCore = (config: NgxEchartsConfig): Provider => {\n  return {\n    provide: NGX_ECHARTS_CONFIG,\n    useValue: config,\n  };\n};\n\n@NgModule({\n  imports: [NgxEchartsDirective],\n  exports: [NgxEchartsDirective],\n})\nexport class NgxEchartsModule {\n  static forRoot(config: NgxEchartsConfig): ModuleWithProviders<NgxEchartsModule> {\n    return {\n      ngModule: NgxEchartsModule,\n      providers: [provideEchartsCore(config)],\n    };\n  }\n  static forChild(): ModuleWithProviders<NgxEchartsModule> {\n    return {\n      ngModule: NgxEchartsModule,\n    };\n  }\n}\n\nexport { NgxEchartsDirective, NGX_ECHARTS_CONFIG, ThemeOption, provideEcharts, provideEchartsCore };\n","/*\n * Public API Surface of ngx-echarts\n */\n\nexport * from './lib/ngx-echarts.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAGa,cAAc,CAAA;AAA3B,IAAA,WAAA,GAAA;AACU,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,aAAa,CAAgB,CAAC,CAAC,CAAC;AAC9C,QAAA,IAAA,CAAA,aAAa,GAAiB,IAAI,YAAY,EAAE,CAAC;KAyD1D;AAvDC,IAAA,QAAQ,CAAC,OAAsB,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5B;IAED,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;IAED,QAAQ,CAAI,GAAW,EAAE,OAAuB,EAAA;AAC9C,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;gBAChB,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;AAC3C,gBAAA,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;oBACzC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CAAC;KACH;IAED,GAAG,CAAI,GAAW,EAAE,OAAuB,EAAA;AACzC,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;gBAChB,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;gBAC3C,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,aAAA;SACF,CAAC,CACH,CAAC;KACH;IAED,QAAQ,CAAI,GAAW,EAAE,OAAuB,EAAA;AAC9C,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE;gBACjD,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;gBAC3C,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,aAAA;SACF,CAAC,CACH,CAAC;KACH;IAED,gBAAgB,CAAI,GAAW,EAAE,OAAuB,EAAA;AACtD,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE;gBACjD,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;AAC3C,gBAAA,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;oBACzC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CAAC;KACH;AACF;;MCpCY,kBAAkB,GAAG,IAAI,cAAc,CAAmB,oBAAoB,EAAE;MAOhF,mBAAmB,CAAA;AAyE9B,IAAA,WAAA,CAC8B,MAAwB,EAC5C,EAAc,EACd,MAAc,EAAA;QADd,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;QACd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QA3Ef,IAAO,CAAA,OAAA,GAAyB,IAAI,CAAC;QACrC,IAAK,CAAA,KAAA,GAAgC,IAAI,CAAC;QAC1C,IAAQ,CAAA,QAAA,GAMN,IAAI,CAAC;QACP,IAAK,CAAA,KAAA,GAAyB,IAAI,CAAC;QACnC,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;QAChB,IAAW,CAAA,WAAA,GAAG,SAAS,CAAC;QACxB,IAAW,CAAA,WAAA,GAAkB,IAAI,CAAC;;AAGjC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAO,CAAC;AACpC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAS,CAAC;;AAGzC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,eAAe,CAAiB,OAAO,CAAC,CAAC;AAC3D,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAiB,UAAU,CAAC,CAAC;AACjE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,eAAe,CAAiB,SAAS,CAAC,CAAC;AAC/D,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAiB,UAAU,CAAC,CAAC;AACjE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAiB,aAAa,CAAC,CAAC;;AAGvE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAM,WAAW,CAAC,CAAC;AACxD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAM,eAAe,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAM,qBAAqB,CAAC,CAAC;AAC5E,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAM,gBAAgB,CAAC,CAAC;AAClE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAM,iBAAiB,CAAC,CAAC;AAC1E,QAAA,IAAA,CAAA,8BAA8B,GAAG,IAAI,CAAC,eAAe,CAAM,qBAAqB,CAAC,CAAC;AAClF,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAM,cAAc,CAAC,CAAC;AAC9D,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAM,mBAAmB,CAAC,CAAC;AACxE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAM,WAAW,CAAC,CAAC;AACxD,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,eAAe,CAAM,SAAS,CAAC,CAAC;AACpD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAM,iBAAiB,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAM,qBAAqB,CAAC,CAAC;AAC5E,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,eAAe,CAAM,SAAS,CAAC,CAAC;AACpD,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAM,iBAAiB,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAM,aAAa,CAAC,CAAC;AAC5D,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAM,eAAe,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,eAAe,CAAM,OAAO,CAAC,CAAC;AAChD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAM,eAAe,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAM,mBAAmB,CAAC,CAAC;AACxE,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;QAEzD,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;AAEvB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;AAGvC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAQ,CAAC;AAG9B,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,cAAc,EAAE,CAAC;AAQ1C,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;KAC/B;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;KACrC;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AAC1B,YAAA,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;AACjE,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO;AAC1B,aAAA,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3E,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAC3C,MACE,IAAI,MAAM,CAAC,cAAc,CAAC,MAAK;AAC7B,gBAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;aACjF,CAAC,CACL,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAC9C,SAAA;AAED,QAAA,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;AAChF,QAAA,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAU,SAAS,EAAE,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAuB,OAAO,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KACtF;IAED,WAAW,GAAA;AACT,QAAA,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;AAC9B,SAAA;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACzB,YAAA,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACpD,SAAA;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAChD,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;AAC/B,SAAA;AACD,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KACjE;IAEO,OAAO,GAAA;QACb,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;AAC5B,gBAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACtB,aAAA;AACD,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACnB,SAAA;KACF;AAED;;AAEG;IACH,MAAM,GAAA;QACJ,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AACrB,SAAA;KACF;AAEO,IAAA,aAAa,CAAC,OAAgB,EAAA;QACpC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO;AACL,kBAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAC5D,kBAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AAC9B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAC3C,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CACtF,CAAC;AACH,SAAA;KACF;IAEO,SAAS,CAAC,MAAW,EAAE,IAAU,EAAA;QACvC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI;gBACF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACpC,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;AACV,gBAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjB,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,aAAA;AACF,SAAA;KACF;AAED;;AAEG;AACH,IAAA,MAAM,YAAY,GAAA;QAChB,IAAI,CAAC,OAAO,EAAE,CAAC;AACf,QAAA,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;KACxB;IAEO,WAAW,GAAA;AACjB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;AAElC,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE;AACrC,YAAA,MAAM,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,KAAK,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,EAAE;AAClF,gBAAA,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;AAC5B,aAAA;AACF,SAAA;;;AAID,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;AACxC,YAAA,MAAM,IAAI,GACR,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1F,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACzE,SAAC,CAAC,CAAC;KACJ;AAEO,IAAA,MAAM,SAAS,GAAA;QACrB,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAEzC,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,SAAA;KACF;IAEO,MAAM,eAAe,CAAC,GAAQ,EAAA;QACpC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO;AACR,SAAA;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACpC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACpC,SAAA;KACF;;;AAIO,IAAA,eAAe,CAAI,SAAiB,EAAA;AAC1C,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,SAAS,CACP,CAAC,KAAU,KACT,IAAI,UAAU,CAAC,QAAQ,IAAG;YACxB,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAO,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7E,YAAA,OAAO,MAAK;gBACV,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,oBAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;AAC5B,wBAAA,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACtB,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC;SACH,CAAC,CACL,CACiB,CAAC;KACtB;AAjPU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,kBA0EpB,kBAAkB,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA,EAAA;kGA1EjB,mBAAmB,EAAA,YAAA,EAAA,IAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,wBAAA,EAAA,0BAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,gCAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,aAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,0BAAA,EAAA,YAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA,EAAA;;2FAAnB,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAL/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,UAAU,EAAE,IAAI;AAChB,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,QAAQ,EAAE,SAAS;AACpB,iBAAA,CAAA;;0BA2EI,MAAM;2BAAC,kBAAkB,CAAA;uFAzEnB,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,QAAQ,EAAA,CAAA;sBAAhB,KAAK;gBAOG,KAAK,EAAA,CAAA;sBAAb,KAAK;gBACG,UAAU,EAAA,CAAA;sBAAlB,KAAK;gBACG,OAAO,EAAA,CAAA;sBAAf,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBACG,WAAW,EAAA,CAAA;sBAAnB,KAAK;gBAGI,SAAS,EAAA,CAAA;sBAAlB,MAAM;gBACG,YAAY,EAAA,CAAA;sBAArB,MAAM;gBAGG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,cAAc,EAAA,CAAA;sBAAvB,MAAM;gBACG,cAAc,EAAA,CAAA;sBAAvB,MAAM;gBACG,YAAY,EAAA,CAAA;sBAArB,MAAM;gBACG,cAAc,EAAA,CAAA;sBAAvB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,cAAc,EAAA,CAAA;sBAAvB,MAAM;gBACG,gBAAgB,EAAA,CAAA;sBAAzB,MAAM;gBAGG,cAAc,EAAA,CAAA;sBAAvB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,kBAAkB,EAAA,CAAA;sBAA3B,MAAM;gBACG,wBAAwB,EAAA,CAAA;sBAAjC,MAAM;gBACG,mBAAmB,EAAA,CAAA;sBAA5B,MAAM;gBACG,qBAAqB,EAAA,CAAA;sBAA9B,MAAM;gBACG,0BAA0B,EAAA,CAAA;sBAAnC,MAAM;gBACG,8BAA8B,EAAA,CAAA;sBAAvC,MAAM;gBACG,iBAAiB,EAAA,CAAA;sBAA1B,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,sBAAsB,EAAA,CAAA;sBAA/B,MAAM;gBACG,cAAc,EAAA,CAAA;sBAAvB,MAAM;gBACG,YAAY,EAAA,CAAA;sBAArB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,oBAAoB,EAAA,CAAA;sBAA7B,MAAM;gBACG,wBAAwB,EAAA,CAAA;sBAAjC,MAAM;gBACG,YAAY,EAAA,CAAA;sBAArB,MAAM;gBACG,oBAAoB,EAAA,CAAA;sBAA7B,MAAM;gBACG,qBAAqB,EAAA,CAAA;sBAA9B,MAAM;gBACG,qBAAqB,EAAA,CAAA;sBAA9B,MAAM;gBACG,gBAAgB,EAAA,CAAA;sBAAzB,MAAM;gBACG,kBAAkB,EAAA,CAAA;sBAA3B,MAAM;gBACG,qBAAqB,EAAA,CAAA;sBAA9B,MAAM;gBACG,UAAU,EAAA,CAAA;sBAAnB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,kBAAkB,EAAA,CAAA;sBAA3B,MAAM;gBACG,sBAAsB,EAAA,CAAA;sBAA/B,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;gBACG,aAAa,EAAA,CAAA;sBAAtB,MAAM;;;ACrFH,MAAA,cAAc,GAAG,MAAe;IACpC,OAAO;AACL,QAAA,OAAO,EAAE,kBAAkB;AAC3B,QAAA,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,OAAO,SAAS,CAAC,EAAE,CAAC;KACzD,CAAC;AACJ,EAAE;AAEF,MAAM,kBAAkB,GAAG,CAAC,MAAwB,KAAc;IAChE,OAAO;AACL,QAAA,OAAO,EAAE,kBAAkB;AAC3B,QAAA,QAAQ,EAAE,MAAM;KACjB,CAAC;AACJ,EAAE;MAMW,gBAAgB,CAAA;IAC3B,OAAO,OAAO,CAAC,MAAwB,EAAA;QACrC,OAAO;AACL,YAAA,QAAQ,EAAE,gBAAgB;AAC1B,YAAA,SAAS,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;SACxC,CAAC;KACH;AACD,IAAA,OAAO,QAAQ,GAAA;QACb,OAAO;AACL,YAAA,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;KACH;8GAXU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA,EAAA;+GAAhB,gBAAgB,EAAA,OAAA,EAAA,CAHjB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CACnB,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA;+GAElB,gBAAgB,EAAA,CAAA,CAAA,EAAA;;2FAAhB,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,mBAAmB,CAAC;oBAC9B,OAAO,EAAE,CAAC,mBAAmB,CAAC;AAC/B,iBAAA,CAAA;;;ACzBD;;AAEG;;ACFH;;AAEG;;;;"}
\ No newline at end of file
+{"version":3,"file":"ngx-echarts.mjs","sources":["../../../projects/ngx-echarts/src/lib/change-filter-v2.ts","../../../projects/ngx-echarts/src/lib/ngx-echarts.directive.ts","../../../projects/ngx-echarts/src/lib/ngx-echarts.module.ts","../../../projects/ngx-echarts/src/public-api.ts","../../../projects/ngx-echarts/src/ngx-echarts.ts"],"sourcesContent":["import { SimpleChanges } from '@angular/core';\r\nimport { ReplaySubject, Subscription } from 'rxjs';\r\n\r\nexport class ChangeFilterV2 {\r\n  private subject = new ReplaySubject<SimpleChanges>(1);\r\n  private subscriptions: Subscription = new Subscription();\r\n\r\n  doFilter(changes: SimpleChanges) {\r\n    this.subject.next(changes);\r\n  }\r\n\r\n  dispose() {\r\n    this.subscriptions.unsubscribe();\r\n  }\r\n\r\n  notEmpty<T>(key: string, handler: (t: T) => void) {\r\n    this.subscriptions.add(\r\n      this.subject.subscribe(changes => {\r\n        if (changes[key]) {\r\n          const value: T = changes[key].currentValue;\r\n          if (value !== undefined && value !== null) {\r\n            handler(value);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  has<T>(key: string, handler: (t: T) => void) {\r\n    this.subscriptions.add(\r\n      this.subject.subscribe(changes => {\r\n        if (changes[key]) {\r\n          const value: T = changes[key].currentValue;\r\n          handler(value);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  notFirst<T>(key: string, handler: (t: T) => void) {\r\n    this.subscriptions.add(\r\n      this.subject.subscribe(changes => {\r\n        if (changes[key] && !changes[key].isFirstChange()) {\r\n          const value: T = changes[key].currentValue;\r\n          handler(value);\r\n        }\r\n      })\r\n    );\r\n  }\r\n\r\n  notFirstAndEmpty<T>(key: string, handler: (t: T) => void) {\r\n    this.subscriptions.add(\r\n      this.subject.subscribe(changes => {\r\n        if (changes[key] && !changes[key].isFirstChange()) {\r\n          const value: T = changes[key].currentValue;\r\n          if (value !== undefined && value !== null) {\r\n            handler(value);\r\n          }\r\n        }\r\n      })\r\n    );\r\n  }\r\n}\r\n","import {\r\n  AfterViewInit,\r\n  Directive,\r\n  ElementRef,\r\n  EventEmitter,\r\n  Inject,\r\n  InjectionToken,\r\n  Input,\r\n  NgZone,\r\n  OnChanges,\r\n  OnDestroy,\r\n  OnInit,\r\n  Output,\r\n  SimpleChanges,\r\n} from '@angular/core';\r\nimport { Observable, ReplaySubject, Subject, Subscription, asyncScheduler } from 'rxjs';\r\nimport { switchMap, throttleTime } from 'rxjs/operators';\r\nimport { ChangeFilterV2 } from './change-filter-v2';\r\nimport type { EChartsOption, ECharts, ECElementEvent } from 'echarts';\r\n\r\nexport interface NgxEchartsConfig {\r\n  echarts: any | (() => Promise<any>);\r\n  theme?: string | ThemeOption;\r\n}\r\n\r\nexport type ThemeOption = Record<string, any>;\r\n\r\nexport const NGX_ECHARTS_CONFIG = new InjectionToken<NgxEchartsConfig>('NGX_ECHARTS_CONFIG');\r\n\r\n@Directive({\r\n  standalone: true,\r\n  selector: 'echarts, [echarts]',\r\n  exportAs: 'echarts',\r\n})\r\nexport class NgxEchartsDirective implements OnChanges, OnDestroy, OnInit, AfterViewInit {\r\n  @Input() options: EChartsOption | null = null;\r\n  @Input() theme: string | ThemeOption | null = null;\r\n  @Input() initOpts: {\r\n    devicePixelRatio?: number;\r\n    renderer?: string;\r\n    width?: number | string;\r\n    height?: number | string;\r\n    locale?: string;\r\n  } | null = null;\r\n  @Input() merge: EChartsOption | null = null;\r\n  @Input() autoResize = true;\r\n  @Input() loading = false;\r\n  @Input() loadingType = 'default';\r\n  @Input() loadingOpts: object | null = null;\r\n\r\n  // ngx-echarts events\r\n  @Output() chartInit = new EventEmitter<any>();\r\n  @Output() optionsError = new EventEmitter<Error>();\r\n\r\n  // echarts mouse events\r\n  @Output() chartClick = this.createLazyEvent<ECElementEvent>('click');\r\n  @Output() chartDblClick = this.createLazyEvent<ECElementEvent>('dblclick');\r\n  @Output() chartMouseDown = this.createLazyEvent<ECElementEvent>('mousedown');\r\n  @Output() chartMouseMove = this.createLazyEvent<ECElementEvent>('mousemove');\r\n  @Output() chartMouseUp = this.createLazyEvent<ECElementEvent>('mouseup');\r\n  @Output() chartMouseOver = this.createLazyEvent<ECElementEvent>('mouseover');\r\n  @Output() chartMouseOut = this.createLazyEvent<ECElementEvent>('mouseout');\r\n  @Output() chartGlobalOut = this.createLazyEvent<ECElementEvent>('globalout');\r\n  @Output() chartContextMenu = this.createLazyEvent<ECElementEvent>('contextmenu');\r\n\r\n  // echarts events\r\n  @Output() chartHighlight = this.createLazyEvent<any>('highlight');\r\n  @Output() chartDownplay = this.createLazyEvent<any>('downplay');\r\n  @Output() chartSelectChanged = this.createLazyEvent<any>('selectchanged');\r\n  @Output() chartLegendSelectChanged = this.createLazyEvent<any>('legendselectchanged');\r\n  @Output() chartLegendSelected = this.createLazyEvent<any>('legendselected');\r\n  @Output() chartLegendUnselected = this.createLazyEvent<any>('legendunselected');\r\n  @Output() chartLegendLegendSelectAll = this.createLazyEvent<any>('legendselectall');\r\n  @Output() chartLegendLegendInverseSelect = this.createLazyEvent<any>('legendinverseselect');\r\n  @Output() chartLegendScroll = this.createLazyEvent<any>('legendscroll');\r\n  @Output() chartDataZoom = this.createLazyEvent<any>('datazoom');\r\n  @Output() chartDataRangeSelected = this.createLazyEvent<any>('datarangeselected');\r\n  @Output() chartGraphRoam = this.createLazyEvent<any>('graphroam');\r\n  @Output() chartGeoRoam = this.createLazyEvent<any>('georoam');\r\n  @Output() chartTreeRoam = this.createLazyEvent<any>('treeroam');\r\n  @Output() chartTimelineChanged = this.createLazyEvent<any>('timelinechanged');\r\n  @Output() chartTimelinePlayChanged = this.createLazyEvent<any>('timelineplaychanged');\r\n  @Output() chartRestore = this.createLazyEvent<any>('restore');\r\n  @Output() chartDataViewChanged = this.createLazyEvent<any>('dataviewchanged');\r\n  @Output() chartMagicTypeChanged = this.createLazyEvent<any>('magictypechanged');\r\n  @Output() chartGeoSelectChanged = this.createLazyEvent<any>('geoselectchanged');\r\n  @Output() chartGeoSelected = this.createLazyEvent<any>('geoselected');\r\n  @Output() chartGeoUnselected = this.createLazyEvent<any>('geounselected');\r\n  @Output() chartAxisAreaSelected = this.createLazyEvent<any>('axisareaselected');\r\n  @Output() chartBrush = this.createLazyEvent<any>('brush');\r\n  @Output() chartBrushEnd = this.createLazyEvent<any>('brushend');\r\n  @Output() chartBrushSelected = this.createLazyEvent<any>('brushselected');\r\n  @Output() chartGlobalCursorTaken = this.createLazyEvent<any>('globalcursortaken');\r\n  @Output() chartRendered = this.createLazyEvent<any>('rendered');\r\n  @Output() chartFinished = this.createLazyEvent<any>('finished');\r\n\r\n  public animationFrameID = null;\r\n  private chart: ECharts;\r\n  private chart$ = new ReplaySubject<ECharts>(1);\r\n  private echarts: any;\r\n  private resizeOb: ResizeObserver;\r\n  private resize$ = new Subject<void>();\r\n  private resizeSub: Subscription;\r\n  private initChartTimer?: number;\r\n  private changeFilter = new ChangeFilterV2();\r\n  private loadingSub: Subscription;\r\n\r\n  constructor(\r\n    @Inject(NGX_ECHARTS_CONFIG) config: NgxEchartsConfig,\r\n    private el: ElementRef,\r\n    private ngZone: NgZone\r\n  ) {\r\n    this.echarts = config.echarts;\r\n    if (!this.theme && config.theme) {\r\n      this.theme = config.theme;\r\n    }\r\n  }\r\n\r\n  ngOnChanges(changes: SimpleChanges) {\r\n    this.changeFilter.doFilter(changes);\r\n  }\r\n\r\n  ngOnInit() {\r\n    if (!window.ResizeObserver) {\r\n      throw new Error('please install a polyfill for ResizeObserver');\r\n    }\r\n    this.resizeSub = this.resize$\r\n      .pipe(throttleTime(100, asyncScheduler, { leading: false, trailing: true }))\r\n      .subscribe(() => this.resize());\r\n\r\n    if (this.autoResize) {\r\n      this.resizeOb = this.ngZone.runOutsideAngular(\r\n        () =>\r\n          new window.ResizeObserver(() => {\r\n            this.animationFrameID = window.requestAnimationFrame(() => this.resize$.next());\r\n          })\r\n      );\r\n      this.resizeOb.observe(this.el.nativeElement);\r\n    }\r\n\r\n    this.changeFilter.notFirstAndEmpty('options', opt => this.onOptionsChange(opt));\r\n    this.changeFilter.notFirstAndEmpty('merge', opt => this.setOption(opt));\r\n    this.changeFilter.has<boolean>('loading', v => this.toggleLoading(!!v));\r\n    this.changeFilter.notFirst<string | ThemeOption>('theme', () => this.refreshChart());\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    window.clearTimeout(this.initChartTimer);\r\n    if (this.resizeSub) {\r\n      this.resizeSub.unsubscribe();\r\n    }\r\n    if (this.animationFrameID) {\r\n      window.cancelAnimationFrame(this.animationFrameID);\r\n    }\r\n    if (this.resizeOb) {\r\n      this.resizeOb.unobserve(this.el.nativeElement);\r\n    }\r\n    if (this.loadingSub) {\r\n      this.loadingSub.unsubscribe();\r\n    }\r\n    this.changeFilter.dispose();\r\n    this.dispose();\r\n  }\r\n\r\n  ngAfterViewInit() {\r\n    this.initChartTimer = window.setTimeout(() => this.initChart());\r\n  }\r\n\r\n  private dispose() {\r\n    if (this.chart) {\r\n      if (!this.chart.isDisposed()) {\r\n        this.chart.dispose();\r\n      }\r\n      this.chart = null;\r\n    }\r\n  }\r\n\r\n  /**\r\n   * resize chart\r\n   */\r\n  resize() {\r\n    if (this.chart) {\r\n      this.chart.resize();\r\n    }\r\n  }\r\n\r\n  private toggleLoading(loading: boolean) {\r\n    if (this.chart) {\r\n      loading\r\n        ? this.chart.showLoading(this.loadingType, this.loadingOpts)\r\n        : this.chart.hideLoading();\r\n    } else {\r\n      this.loadingSub = this.chart$.subscribe(chart =>\r\n        loading ? chart.showLoading(this.loadingType, this.loadingOpts) : chart.hideLoading()\r\n      );\r\n    }\r\n  }\r\n\r\n  private setOption(option: any, opts?: any) {\r\n    if (this.chart) {\r\n      try {\r\n        this.chart.setOption(option, opts);\r\n      } catch (e) {\r\n        console.error(e);\r\n        this.optionsError.emit(e);\r\n      }\r\n    }\r\n  }\r\n\r\n  /**\r\n   * dispose old chart and create a new one.\r\n   */\r\n  async refreshChart() {\r\n    this.dispose();\r\n    await this.initChart();\r\n  }\r\n\r\n  private createChart() {\r\n    const dom = this.el.nativeElement;\r\n\r\n    if (window && window.getComputedStyle) {\r\n      const prop = window.getComputedStyle(dom, null).getPropertyValue('height');\r\n      if ((!prop || prop === '0px') && (!dom.style.height || dom.style.height === '0px')) {\r\n        dom.style.height = '400px';\r\n      }\r\n    }\r\n\r\n    // here a bit tricky: we check if the echarts module is provided as function returning native import('...') then use the promise\r\n    // otherwise create the function that imitates behaviour above with a provided as is module\r\n    return this.ngZone.runOutsideAngular(() => {\r\n      const load =\r\n        typeof this.echarts === 'function' ? this.echarts : () => Promise.resolve(this.echarts);\r\n\r\n      return load().then(({ init }) => init(dom, this.theme, this.initOpts));\r\n    });\r\n  }\r\n\r\n  private async initChart() {\r\n    await this.onOptionsChange(this.options);\r\n\r\n    if (this.merge && this.chart) {\r\n      this.setOption(this.merge);\r\n    }\r\n  }\r\n\r\n  private async onOptionsChange(opt: any) {\r\n    if (!opt) {\r\n      return;\r\n    }\r\n\r\n    if (this.chart) {\r\n      this.setOption(this.options, true);\r\n    } else {\r\n      this.chart = await this.createChart();\r\n      this.chart$.next(this.chart);\r\n      this.chartInit.emit(this.chart);\r\n      this.setOption(this.options, true);\r\n    }\r\n  }\r\n\r\n  // allows to lazily bind to only those events that are requested through the `@Output` by parent components\r\n  // see https://stackoverflow.com/questions/51787972/optimal-reentering-the-ngzone-from-eventemitter-event for more info\r\n  private createLazyEvent<T>(eventName: string): EventEmitter<T> {\r\n    return this.chartInit.pipe(\r\n      switchMap(\r\n        (chart: any) =>\r\n          new Observable(observer => {\r\n            chart.on(eventName, (data: T) => this.ngZone.run(() => observer.next(data)));\r\n            return () => {\r\n              if (this.chart) {\r\n                if (!this.chart.isDisposed()) {\r\n                  chart.off(eventName);\r\n                }\r\n              }\r\n            };\r\n          })\r\n      )\r\n    ) as EventEmitter<T>;\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, Provider } from '@angular/core';\r\nimport {\r\n  NgxEchartsDirective,\r\n  NgxEchartsConfig,\r\n  NGX_ECHARTS_CONFIG,\r\n  ThemeOption,\r\n} from './ngx-echarts.directive';\r\n\r\nconst provideEcharts = (config: Omit<NgxEchartsConfig, 'echarts'>): Provider => {\r\n  return {\r\n    provide: NGX_ECHARTS_CONFIG,\r\n    useFactory: () => ({\r\n      ...config,\r\n      echarts: () => import('echarts'),\r\n    }),\r\n  };\r\n};\r\n\r\nconst provideEchartsCore = (config: NgxEchartsConfig): Provider => {\r\n  return {\r\n    provide: NGX_ECHARTS_CONFIG,\r\n    useValue: config,\r\n  };\r\n};\r\n\r\n@NgModule({\r\n  imports: [NgxEchartsDirective],\r\n  exports: [NgxEchartsDirective],\r\n})\r\nexport class NgxEchartsModule {\r\n  static forRoot(config: NgxEchartsConfig): ModuleWithProviders<NgxEchartsModule> {\r\n    return {\r\n      ngModule: NgxEchartsModule,\r\n      providers: [provideEchartsCore(config)],\r\n    };\r\n  }\r\n  static forChild(): ModuleWithProviders<NgxEchartsModule> {\r\n    return {\r\n      ngModule: NgxEchartsModule,\r\n    };\r\n  }\r\n}\r\n\r\nexport { NgxEchartsDirective, NGX_ECHARTS_CONFIG, ThemeOption, provideEcharts, provideEchartsCore };\r\n","/*\r\n * Public API Surface of ngx-echarts\r\n */\r\n\r\nexport * from './lib/ngx-echarts.module';\r\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAGa,cAAc,CAAA;AAA3B,IAAA,WAAA,GAAA;AACU,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,aAAa,CAAgB,CAAC,CAAC,CAAC;AAC9C,QAAA,IAAA,CAAA,aAAa,GAAiB,IAAI,YAAY,EAAE,CAAC;KAyD1D;AAvDC,IAAA,QAAQ,CAAC,OAAsB,EAAA;AAC7B,QAAA,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KAC5B;IAED,OAAO,GAAA;AACL,QAAA,IAAI,CAAC,aAAa,CAAC,WAAW,EAAE,CAAC;KAClC;IAED,QAAQ,CAAI,GAAW,EAAE,OAAuB,EAAA;AAC9C,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;gBAChB,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;AAC3C,gBAAA,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;oBACzC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CAAC;KACH;IAED,GAAG,CAAI,GAAW,EAAE,OAAuB,EAAA;AACzC,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,EAAE;gBAChB,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;gBAC3C,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,aAAA;SACF,CAAC,CACH,CAAC;KACH;IAED,QAAQ,CAAI,GAAW,EAAE,OAAuB,EAAA;AAC9C,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE;gBACjD,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;gBAC3C,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,aAAA;SACF,CAAC,CACH,CAAC;KACH;IAED,gBAAgB,CAAI,GAAW,EAAE,OAAuB,EAAA;AACtD,QAAA,IAAI,CAAC,aAAa,CAAC,GAAG,CACpB,IAAI,CAAC,OAAO,CAAC,SAAS,CAAC,OAAO,IAAG;AAC/B,YAAA,IAAI,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,aAAa,EAAE,EAAE;gBACjD,MAAM,KAAK,GAAM,OAAO,CAAC,GAAG,CAAC,CAAC,YAAY,CAAC;AAC3C,gBAAA,IAAI,KAAK,KAAK,SAAS,IAAI,KAAK,KAAK,IAAI,EAAE;oBACzC,OAAO,CAAC,KAAK,CAAC,CAAC;AAChB,iBAAA;AACF,aAAA;SACF,CAAC,CACH,CAAC;KACH;AACF;;MCnCY,kBAAkB,GAAG,IAAI,cAAc,CAAmB,oBAAoB,EAAE;MAOhF,mBAAmB,CAAA;AAyE9B,IAAA,WAAA,CAC8B,MAAwB,EAC5C,EAAc,EACd,MAAc,EAAA;QADd,IAAE,CAAA,EAAA,GAAF,EAAE,CAAY;QACd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QA3Ef,IAAO,CAAA,OAAA,GAAyB,IAAI,CAAC;QACrC,IAAK,CAAA,KAAA,GAAgC,IAAI,CAAC;QAC1C,IAAQ,CAAA,QAAA,GAMN,IAAI,CAAC;QACP,IAAK,CAAA,KAAA,GAAyB,IAAI,CAAC;QACnC,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAO,CAAA,OAAA,GAAG,KAAK,CAAC;QAChB,IAAW,CAAA,WAAA,GAAG,SAAS,CAAC;QACxB,IAAW,CAAA,WAAA,GAAkB,IAAI,CAAC;;AAGjC,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,YAAY,EAAO,CAAC;AACpC,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,YAAY,EAAS,CAAC;;AAGzC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,eAAe,CAAiB,OAAO,CAAC,CAAC;AAC3D,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAiB,UAAU,CAAC,CAAC;AACjE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,eAAe,CAAiB,SAAS,CAAC,CAAC;AAC/D,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAiB,UAAU,CAAC,CAAC;AACjE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAiB,WAAW,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAiB,aAAa,CAAC,CAAC;;AAGvE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAM,WAAW,CAAC,CAAC;AACxD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAM,eAAe,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAM,qBAAqB,CAAC,CAAC;AAC5E,QAAA,IAAA,CAAA,mBAAmB,GAAG,IAAI,CAAC,eAAe,CAAM,gBAAgB,CAAC,CAAC;AAClE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,0BAA0B,GAAG,IAAI,CAAC,eAAe,CAAM,iBAAiB,CAAC,CAAC;AAC1E,QAAA,IAAA,CAAA,8BAA8B,GAAG,IAAI,CAAC,eAAe,CAAM,qBAAqB,CAAC,CAAC;AAClF,QAAA,IAAA,CAAA,iBAAiB,GAAG,IAAI,CAAC,eAAe,CAAM,cAAc,CAAC,CAAC;AAC9D,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAM,mBAAmB,CAAC,CAAC;AACxE,QAAA,IAAA,CAAA,cAAc,GAAG,IAAI,CAAC,eAAe,CAAM,WAAW,CAAC,CAAC;AACxD,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,eAAe,CAAM,SAAS,CAAC,CAAC;AACpD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAM,iBAAiB,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,wBAAwB,GAAG,IAAI,CAAC,eAAe,CAAM,qBAAqB,CAAC,CAAC;AAC5E,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,CAAC,eAAe,CAAM,SAAS,CAAC,CAAC;AACpD,QAAA,IAAA,CAAA,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAM,iBAAiB,CAAC,CAAC;AACpE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAM,aAAa,CAAC,CAAC;AAC5D,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAM,eAAe,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAM,kBAAkB,CAAC,CAAC;AACtE,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,CAAC,eAAe,CAAM,OAAO,CAAC,CAAC;AAChD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAM,eAAe,CAAC,CAAC;AAChE,QAAA,IAAA,CAAA,sBAAsB,GAAG,IAAI,CAAC,eAAe,CAAM,mBAAmB,CAAC,CAAC;AACxE,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;AACtD,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,CAAC,eAAe,CAAM,UAAU,CAAC,CAAC;QAEzD,IAAgB,CAAA,gBAAA,GAAG,IAAI,CAAC;AAEvB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,aAAa,CAAU,CAAC,CAAC,CAAC;AAGvC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,OAAO,EAAQ,CAAC;AAG9B,QAAA,IAAA,CAAA,YAAY,GAAG,IAAI,cAAc,EAAE,CAAC;AAQ1C,QAAA,IAAI,CAAC,OAAO,GAAG,MAAM,CAAC,OAAO,CAAC;QAC9B,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,MAAM,CAAC,KAAK,EAAE;AAC/B,YAAA,IAAI,CAAC,KAAK,GAAG,MAAM,CAAC,KAAK,CAAC;AAC3B,SAAA;KACF;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAChC,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;KACrC;IAED,QAAQ,GAAA;AACN,QAAA,IAAI,CAAC,MAAM,CAAC,cAAc,EAAE;AAC1B,YAAA,MAAM,IAAI,KAAK,CAAC,8CAA8C,CAAC,CAAC;AACjE,SAAA;AACD,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO;AAC1B,aAAA,IAAI,CAAC,YAAY,CAAC,GAAG,EAAE,cAAc,EAAE,EAAE,OAAO,EAAE,KAAK,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAC;aAC3E,SAAS,CAAC,MAAM,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;QAElC,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAC3C,MACE,IAAI,MAAM,CAAC,cAAc,CAAC,MAAK;AAC7B,gBAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,qBAAqB,CAAC,MAAM,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC,CAAC;aACjF,CAAC,CACL,CAAC;YACF,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAC9C,SAAA;AAED,QAAA,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,SAAS,EAAE,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC,CAAC;AAChF,QAAA,IAAI,CAAC,YAAY,CAAC,gBAAgB,CAAC,OAAO,EAAE,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC;QACxE,IAAI,CAAC,YAAY,CAAC,GAAG,CAAU,SAAS,EAAE,CAAC,IAAI,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAuB,OAAO,EAAE,MAAM,IAAI,CAAC,YAAY,EAAE,CAAC,CAAC;KACtF;IAED,WAAW,GAAA;AACT,QAAA,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;QACzC,IAAI,IAAI,CAAC,SAAS,EAAE;AAClB,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;AAC9B,SAAA;QACD,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACzB,YAAA,MAAM,CAAC,oBAAoB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACpD,SAAA;QACD,IAAI,IAAI,CAAC,QAAQ,EAAE;YACjB,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC,CAAC;AAChD,SAAA;QACD,IAAI,IAAI,CAAC,UAAU,EAAE;AACnB,YAAA,IAAI,CAAC,UAAU,CAAC,WAAW,EAAE,CAAC;AAC/B,SAAA;AACD,QAAA,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE,CAAC;QAC5B,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,eAAe,GAAA;AACb,QAAA,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC,CAAC;KACjE;IAEO,OAAO,GAAA;QACb,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;AAC5B,gBAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACtB,aAAA;AACD,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC;AACnB,SAAA;KACF;AAED;;AAEG;IACH,MAAM,GAAA;QACJ,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;AACrB,SAAA;KACF;AAEO,IAAA,aAAa,CAAC,OAAgB,EAAA;QACpC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO;AACL,kBAAE,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC;AAC5D,kBAAE,IAAI,CAAC,KAAK,CAAC,WAAW,EAAE,CAAC;AAC9B,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,IAC3C,OAAO,GAAG,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,WAAW,EAAE,IAAI,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC,WAAW,EAAE,CACtF,CAAC;AACH,SAAA;KACF;IAEO,SAAS,CAAC,MAAW,EAAE,IAAU,EAAA;QACvC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI;gBACF,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;AACpC,aAAA;AAAC,YAAA,OAAO,CAAC,EAAE;AACV,gBAAA,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACjB,gBAAA,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC3B,aAAA;AACF,SAAA;KACF;AAED;;AAEG;AACH,IAAA,MAAM,YAAY,GAAA;QAChB,IAAI,CAAC,OAAO,EAAE,CAAC;AACf,QAAA,MAAM,IAAI,CAAC,SAAS,EAAE,CAAC;KACxB;IAEO,WAAW,GAAA;AACjB,QAAA,MAAM,GAAG,GAAG,IAAI,CAAC,EAAE,CAAC,aAAa,CAAC;AAElC,QAAA,IAAI,MAAM,IAAI,MAAM,CAAC,gBAAgB,EAAE;AACrC,YAAA,MAAM,IAAI,GAAG,MAAM,CAAC,gBAAgB,CAAC,GAAG,EAAE,IAAI,CAAC,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC;YAC3E,IAAI,CAAC,CAAC,IAAI,IAAI,IAAI,KAAK,KAAK,MAAM,CAAC,GAAG,CAAC,KAAK,CAAC,MAAM,IAAI,GAAG,CAAC,KAAK,CAAC,MAAM,KAAK,KAAK,CAAC,EAAE;AAClF,gBAAA,GAAG,CAAC,KAAK,CAAC,MAAM,GAAG,OAAO,CAAC;AAC5B,aAAA;AACF,SAAA;;;AAID,QAAA,OAAO,IAAI,CAAC,MAAM,CAAC,iBAAiB,CAAC,MAAK;AACxC,YAAA,MAAM,IAAI,GACR,OAAO,IAAI,CAAC,OAAO,KAAK,UAAU,GAAG,IAAI,CAAC,OAAO,GAAG,MAAM,OAAO,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAE1F,OAAO,IAAI,EAAE,CAAC,IAAI,CAAC,CAAC,EAAE,IAAI,EAAE,KAAK,IAAI,CAAC,GAAG,EAAE,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;AACzE,SAAC,CAAC,CAAC;KACJ;AAEO,IAAA,MAAM,SAAS,GAAA;QACrB,MAAM,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AAEzC,QAAA,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,EAAE;AAC5B,YAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC5B,SAAA;KACF;IAEO,MAAM,eAAe,CAAC,GAAQ,EAAA;QACpC,IAAI,CAAC,GAAG,EAAE;YACR,OAAO;AACR,SAAA;QAED,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACpC,SAAA;AAAM,aAAA;YACL,IAAI,CAAC,KAAK,GAAG,MAAM,IAAI,CAAC,WAAW,EAAE,CAAC;YACtC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;YAChC,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;AACpC,SAAA;KACF;;;AAIO,IAAA,eAAe,CAAI,SAAiB,EAAA;AAC1C,QAAA,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CACxB,SAAS,CACP,CAAC,KAAU,KACT,IAAI,UAAU,CAAC,QAAQ,IAAG;YACxB,KAAK,CAAC,EAAE,CAAC,SAAS,EAAE,CAAC,IAAO,KAAK,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,MAAM,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC7E,YAAA,OAAO,MAAK;gBACV,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,oBAAA,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,EAAE,EAAE;AAC5B,wBAAA,KAAK,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;AACtB,qBAAA;AACF,iBAAA;AACH,aAAC,CAAC;SACH,CAAC,CACL,CACiB,CAAC;KACtB;AApPU,IAAA,SAAA,IAAA,CAAA,IAAA,GAAA,SAAA,2BAAA,CAAA,CAAA,EAAA,EAAA,OAAA,KAAA,CAAA,IAAA,mBAAmB,uBA0EpB,kBAAkB,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,MAAA,CAAA,CAAA,CAAA,EAAA,CAAA,EAAA;oEA1EjB,mBAAmB,EAAA,SAAA,EAAA,CAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,EAAA,SAAA,EAAA,EAAA,CAAA,CAAA,EAAA,MAAA,EAAA,EAAA,OAAA,EAAA,SAAA,EAAA,KAAA,EAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,KAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,OAAA,EAAA,SAAA,EAAA,WAAA,EAAA,aAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,OAAA,EAAA,EAAA,SAAA,EAAA,WAAA,EAAA,YAAA,EAAA,cAAA,EAAA,UAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,wBAAA,EAAA,0BAAA,EAAA,mBAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,gCAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,cAAA,EAAA,aAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,0BAAA,EAAA,YAAA,EAAA,cAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,aAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,UAAA,EAAA,IAAA,EAAA,QAAA,EAAA,CAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,CAAA,CAAA,EAAA;;iFAAnB,mBAAmB,EAAA,CAAA;cAL/B,SAAS;AAAC,QAAA,IAAA,EAAA,CAAA;AACT,gBAAA,UAAU,EAAE,IAAI;AAChB,gBAAA,QAAQ,EAAE,oBAAoB;AAC9B,gBAAA,QAAQ,EAAE,SAAS;AACpB,aAAA,CAAA;;sBA2EI,MAAM;uBAAC,kBAAkB,CAAA;mEAzEnB,OAAO,EAAA,CAAA;kBAAf,KAAK;YACG,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,QAAQ,EAAA,CAAA;kBAAhB,KAAK;YAOG,KAAK,EAAA,CAAA;kBAAb,KAAK;YACG,UAAU,EAAA,CAAA;kBAAlB,KAAK;YACG,OAAO,EAAA,CAAA;kBAAf,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YACG,WAAW,EAAA,CAAA;kBAAnB,KAAK;YAGI,SAAS,EAAA,CAAA;kBAAlB,MAAM;YACG,YAAY,EAAA,CAAA;kBAArB,MAAM;YAGG,UAAU,EAAA,CAAA;kBAAnB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,cAAc,EAAA,CAAA;kBAAvB,MAAM;YACG,cAAc,EAAA,CAAA;kBAAvB,MAAM;YACG,YAAY,EAAA,CAAA;kBAArB,MAAM;YACG,cAAc,EAAA,CAAA;kBAAvB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,cAAc,EAAA,CAAA;kBAAvB,MAAM;YACG,gBAAgB,EAAA,CAAA;kBAAzB,MAAM;YAGG,cAAc,EAAA,CAAA;kBAAvB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,kBAAkB,EAAA,CAAA;kBAA3B,MAAM;YACG,wBAAwB,EAAA,CAAA;kBAAjC,MAAM;YACG,mBAAmB,EAAA,CAAA;kBAA5B,MAAM;YACG,qBAAqB,EAAA,CAAA;kBAA9B,MAAM;YACG,0BAA0B,EAAA,CAAA;kBAAnC,MAAM;YACG,8BAA8B,EAAA,CAAA;kBAAvC,MAAM;YACG,iBAAiB,EAAA,CAAA;kBAA1B,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,sBAAsB,EAAA,CAAA;kBAA/B,MAAM;YACG,cAAc,EAAA,CAAA;kBAAvB,MAAM;YACG,YAAY,EAAA,CAAA;kBAArB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,oBAAoB,EAAA,CAAA;kBAA7B,MAAM;YACG,wBAAwB,EAAA,CAAA;kBAAjC,MAAM;YACG,YAAY,EAAA,CAAA;kBAArB,MAAM;YACG,oBAAoB,EAAA,CAAA;kBAA7B,MAAM;YACG,qBAAqB,EAAA,CAAA;kBAA9B,MAAM;YACG,qBAAqB,EAAA,CAAA;kBAA9B,MAAM;YACG,gBAAgB,EAAA,CAAA;kBAAzB,MAAM;YACG,kBAAkB,EAAA,CAAA;kBAA3B,MAAM;YACG,qBAAqB,EAAA,CAAA;kBAA9B,MAAM;YACG,UAAU,EAAA,CAAA;kBAAnB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,kBAAkB,EAAA,CAAA;kBAA3B,MAAM;YACG,sBAAsB,EAAA,CAAA;kBAA/B,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;YACG,aAAa,EAAA,CAAA;kBAAtB,MAAM;;;ACtFT,MAAM,cAAc,GAAG,CAAC,MAAyC,KAAc;IAC7E,OAAO;AACL,QAAA,OAAO,EAAE,kBAAkB;AAC3B,QAAA,UAAU,EAAE,OAAO;AACjB,YAAA,GAAG,MAAM;AACT,YAAA,OAAO,EAAE,MAAM,OAAO,SAAS,CAAC;SACjC,CAAC;KACH,CAAC;AACJ,EAAE;AAEF,MAAM,kBAAkB,GAAG,CAAC,MAAwB,KAAc;IAChE,OAAO;AACL,QAAA,OAAO,EAAE,kBAAkB;AAC3B,QAAA,QAAQ,EAAE,MAAM;KACjB,CAAC;AACJ,EAAE;MAMW,gBAAgB,CAAA;IAC3B,OAAO,OAAO,CAAC,MAAwB,EAAA;QACrC,OAAO;AACL,YAAA,QAAQ,EAAE,gBAAgB;AAC1B,YAAA,SAAS,EAAE,CAAC,kBAAkB,CAAC,MAAM,CAAC,CAAC;SACxC,CAAC;KACH;AACD,IAAA,OAAO,QAAQ,GAAA;QACb,OAAO;AACL,YAAA,QAAQ,EAAE,gBAAgB;SAC3B,CAAC;KACH;iFAXU,gBAAgB,GAAA,CAAA,EAAA,CAAA,EAAA;mEAAhB,gBAAgB,EAAA,CAAA,CAAA,EAAA;;;iFAAhB,gBAAgB,EAAA,CAAA;cAJ5B,QAAQ;AAAC,QAAA,IAAA,EAAA,CAAA;gBACR,OAAO,EAAE,CAAC,mBAAmB,CAAC;gBAC9B,OAAO,EAAE,CAAC,mBAAmB,CAAC;AAC/B,aAAA,CAAA;;wFACY,gBAAgB,EAAA,EAAA,OAAA,EAAA,CAHjB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CACnB,mBAAmB,CAAA,EAAA,CAAA,CAAA,EAAA,GAAA;;AC3B/B;;AAEG;;ACFH;;AAEG;;;;"}
\ No newline at end of file
diff --git a/index.d.ts b/index.d.ts
index b1d254ae23bcbc83098dc885191eb5f55a8d118b..0007ac2f953e55806fda6ef0c11c9ed53b83dfc8 100644
--- a/index.d.ts
+++ b/index.d.ts
@@ -3,3 +3,4 @@
  */
 /// <amd-module name="ngx-echarts" />
 export * from './public-api';
+//# sourceMappingURL=ngx-echarts.d.ts.map
\ No newline at end of file
diff --git a/lib/change-filter-v2.d.ts b/lib/change-filter-v2.d.ts
index 7942bc9ae31e05fe259eeacff949393084d42c1d..345ae6629431aaefb2b9e12347ad3e3560cc8889 100644
--- a/lib/change-filter-v2.d.ts
+++ b/lib/change-filter-v2.d.ts
@@ -9,3 +9,4 @@ export declare class ChangeFilterV2 {
     notFirst<T>(key: string, handler: (t: T) => void): void;
     notFirstAndEmpty<T>(key: string, handler: (t: T) => void): void;
 }
+//# sourceMappingURL=change-filter-v2.d.ts.map
\ No newline at end of file
diff --git a/lib/change-filter-v2.d.ts.map b/lib/change-filter-v2.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..7070770f4dbd2445f0166622a02574c9ea900e38
--- /dev/null
+++ b/lib/change-filter-v2.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"change-filter-v2.d.ts","sourceRoot":"","sources":["../../../projects/ngx-echarts/src/lib/change-filter-v2.ts"],"names":[],"mappings":"AAAA,OAAO,EAAE,aAAa,EAAE,MAAM,eAAe,CAAC;AAG9C,qBAAa,cAAc;IACzB,OAAO,CAAC,OAAO,CAAuC;IACtD,OAAO,CAAC,aAAa,CAAoC;IAEzD,QAAQ,CAAC,OAAO,EAAE,aAAa;IAI/B,OAAO;IAIP,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI;IAahD,GAAG,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI;IAW3C,QAAQ,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI;IAWhD,gBAAgB,CAAC,CAAC,EAAE,GAAG,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAC,EAAE,CAAC,KAAK,IAAI;CAYzD"}
\ No newline at end of file
diff --git a/lib/ngx-echarts.directive.d.ts b/lib/ngx-echarts.directive.d.ts
index f6f38fb0078e976041de2debea0b98c2b84a0ac6..b1d538020d45d9ebdb70e5ab5e9420dc611deee4 100644
--- a/lib/ngx-echarts.directive.d.ts
+++ b/lib/ngx-echarts.directive.d.ts
@@ -3,6 +3,7 @@ import type { EChartsOption, ECElementEvent } from 'echarts';
 import * as i0 from "@angular/core";
 export interface NgxEchartsConfig {
     echarts: any | (() => Promise<any>);
+    theme?: string | ThemeOption;
 }
 export type ThemeOption = Record<string, any>;
 export declare const NGX_ECHARTS_CONFIG: InjectionToken<NgxEchartsConfig>;
@@ -96,3 +97,4 @@ export declare class NgxEchartsDirective implements OnChanges, OnDestroy, OnInit
     static ɵfac: i0.ɵɵFactoryDeclaration<NgxEchartsDirective, never>;
     static ɵdir: i0.ɵɵDirectiveDeclaration<NgxEchartsDirective, "echarts, [echarts]", ["echarts"], { "options": { "alias": "options"; "required": false; }; "theme": { "alias": "theme"; "required": false; }; "initOpts": { "alias": "initOpts"; "required": false; }; "merge": { "alias": "merge"; "required": false; }; "autoResize": { "alias": "autoResize"; "required": false; }; "loading": { "alias": "loading"; "required": false; }; "loadingType": { "alias": "loadingType"; "required": false; }; "loadingOpts": { "alias": "loadingOpts"; "required": false; }; }, { "chartInit": "chartInit"; "optionsError": "optionsError"; "chartClick": "chartClick"; "chartDblClick": "chartDblClick"; "chartMouseDown": "chartMouseDown"; "chartMouseMove": "chartMouseMove"; "chartMouseUp": "chartMouseUp"; "chartMouseOver": "chartMouseOver"; "chartMouseOut": "chartMouseOut"; "chartGlobalOut": "chartGlobalOut"; "chartContextMenu": "chartContextMenu"; "chartHighlight": "chartHighlight"; "chartDownplay": "chartDownplay"; "chartSelectChanged": "chartSelectChanged"; "chartLegendSelectChanged": "chartLegendSelectChanged"; "chartLegendSelected": "chartLegendSelected"; "chartLegendUnselected": "chartLegendUnselected"; "chartLegendLegendSelectAll": "chartLegendLegendSelectAll"; "chartLegendLegendInverseSelect": "chartLegendLegendInverseSelect"; "chartLegendScroll": "chartLegendScroll"; "chartDataZoom": "chartDataZoom"; "chartDataRangeSelected": "chartDataRangeSelected"; "chartGraphRoam": "chartGraphRoam"; "chartGeoRoam": "chartGeoRoam"; "chartTreeRoam": "chartTreeRoam"; "chartTimelineChanged": "chartTimelineChanged"; "chartTimelinePlayChanged": "chartTimelinePlayChanged"; "chartRestore": "chartRestore"; "chartDataViewChanged": "chartDataViewChanged"; "chartMagicTypeChanged": "chartMagicTypeChanged"; "chartGeoSelectChanged": "chartGeoSelectChanged"; "chartGeoSelected": "chartGeoSelected"; "chartGeoUnselected": "chartGeoUnselected"; "chartAxisAreaSelected": "chartAxisAreaSelected"; "chartBrush": "chartBrush"; "chartBrushEnd": "chartBrushEnd"; "chartBrushSelected": "chartBrushSelected"; "chartGlobalCursorTaken": "chartGlobalCursorTaken"; "chartRendered": "chartRendered"; "chartFinished": "chartFinished"; }, never, never, true, never>;
 }
+//# sourceMappingURL=ngx-echarts.directive.d.ts.map
\ No newline at end of file
diff --git a/lib/ngx-echarts.directive.d.ts.map b/lib/ngx-echarts.directive.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..34a4f4ed012ed8795e0cf7a498308c4c6e7515fb
--- /dev/null
+++ b/lib/ngx-echarts.directive.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-echarts.directive.d.ts","sourceRoot":"","sources":["../../../projects/ngx-echarts/src/lib/ngx-echarts.directive.ts"],"names":[],"mappings":"AAAA,OAAO,EACL,aAAa,EAEb,UAAU,EACV,YAAY,EAEZ,cAAc,EAEd,MAAM,EACN,SAAS,EACT,SAAS,EACT,MAAM,EAEN,aAAa,EACd,MAAM,eAAe,CAAC;AAIvB,OAAO,KAAK,EAAE,aAAa,EAAW,cAAc,EAAE,MAAM,SAAS,CAAC;;AAEtE,MAAM,WAAW,gBAAgB;IAC/B,OAAO,EAAE,GAAG,GAAG,CAAC,MAAM,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;IACpC,KAAK,CAAC,EAAE,MAAM,GAAG,WAAW,CAAC;CAC9B;AAED,MAAM,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,EAAE,GAAG,CAAC,CAAC;AAE9C,eAAO,MAAM,kBAAkB,kCAA6D,CAAC;AAE7F,qBAKa,mBAAoB,YAAW,SAAS,EAAE,SAAS,EAAE,MAAM,EAAE,aAAa;IA2EnF,OAAO,CAAC,EAAE;IACV,OAAO,CAAC,MAAM;IA3EP,OAAO,EAAE,aAAa,GAAG,IAAI,CAAQ;IACrC,KAAK,EAAE,MAAM,GAAG,WAAW,GAAG,IAAI,CAAQ;IAC1C,QAAQ,EAAE;QACjB,gBAAgB,CAAC,EAAE,MAAM,CAAC;QAC1B,QAAQ,CAAC,EAAE,MAAM,CAAC;QAClB,KAAK,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;QACxB,MAAM,CAAC,EAAE,MAAM,GAAG,MAAM,CAAC;QACzB,MAAM,CAAC,EAAE,MAAM,CAAC;KACjB,GAAG,IAAI,CAAQ;IACP,KAAK,EAAE,aAAa,GAAG,IAAI,CAAQ;IACnC,UAAU,UAAQ;IAClB,OAAO,UAAS;IAChB,WAAW,SAAa;IACxB,WAAW,EAAE,MAAM,GAAG,IAAI,CAAQ;IAGjC,SAAS,oBAA2B;IACpC,YAAY,sBAA6B;IAGzC,UAAU,+BAAiD;IAC3D,aAAa,+BAAoD;IACjE,cAAc,+BAAqD;IACnE,cAAc,+BAAqD;IACnE,YAAY,+BAAmD;IAC/D,cAAc,+BAAqD;IACnE,aAAa,+BAAoD;IACjE,cAAc,+BAAqD;IACnE,gBAAgB,+BAAuD;IAGvE,cAAc,oBAA0C;IACxD,aAAa,oBAAyC;IACtD,kBAAkB,oBAA8C;IAChE,wBAAwB,oBAAoD;IAC5E,mBAAmB,oBAA+C;IAClE,qBAAqB,oBAAiD;IACtE,0BAA0B,oBAAgD;IAC1E,8BAA8B,oBAAoD;IAClF,iBAAiB,oBAA6C;IAC9D,aAAa,oBAAyC;IACtD,sBAAsB,oBAAkD;IACxE,cAAc,oBAA0C;IACxD,YAAY,oBAAwC;IACpD,aAAa,oBAAyC;IACtD,oBAAoB,oBAAgD;IACpE,wBAAwB,oBAAoD;IAC5E,YAAY,oBAAwC;IACpD,oBAAoB,oBAAgD;IACpE,qBAAqB,oBAAiD;IACtE,qBAAqB,oBAAiD;IACtE,gBAAgB,oBAA4C;IAC5D,kBAAkB,oBAA8C;IAChE,qBAAqB,oBAAiD;IACtE,UAAU,oBAAsC;IAChD,aAAa,oBAAyC;IACtD,kBAAkB,oBAA8C;IAChE,sBAAsB,oBAAkD;IACxE,aAAa,oBAAyC;IACtD,aAAa,oBAAyC;IAEzD,gBAAgB,MAAQ;IAC/B,OAAO,CAAC,KAAK,CAAU;IACvB,OAAO,CAAC,MAAM,CAAiC;IAC/C,OAAO,CAAC,OAAO,CAAM;IACrB,OAAO,CAAC,QAAQ,CAAiB;IACjC,OAAO,CAAC,OAAO,CAAuB;IACtC,OAAO,CAAC,SAAS,CAAe;IAChC,OAAO,CAAC,cAAc,CAAC,CAAS;IAChC,OAAO,CAAC,YAAY,CAAwB;IAC5C,OAAO,CAAC,UAAU,CAAe;gBAGH,MAAM,EAAE,gBAAgB,EAC5C,EAAE,EAAE,UAAU,EACd,MAAM,EAAE,MAAM;IAQxB,WAAW,CAAC,OAAO,EAAE,aAAa;IAIlC,QAAQ;IAwBR,WAAW;IAkBX,eAAe;IAIf,OAAO,CAAC,OAAO;IASf;;OAEG;IACH,MAAM;IAMN,OAAO,CAAC,aAAa;IAYrB,OAAO,CAAC,SAAS;IAWjB;;OAEG;IACG,YAAY;IAKlB,OAAO,CAAC,WAAW;YAoBL,SAAS;YAQT,eAAe;IAiB7B,OAAO,CAAC,eAAe;yCApOZ,mBAAmB;2CAAnB,mBAAmB;CAqP/B"}
\ No newline at end of file
diff --git a/lib/ngx-echarts.module.d.ts b/lib/ngx-echarts.module.d.ts
index 2341ec513fad88953fab548f20375e53c4d9640a..136c7da35c32ab89ca05755e93cce703fd2bbe30 100644
--- a/lib/ngx-echarts.module.d.ts
+++ b/lib/ngx-echarts.module.d.ts
@@ -2,7 +2,7 @@ import { ModuleWithProviders, Provider } from '@angular/core';
 import { NgxEchartsDirective, NgxEchartsConfig, NGX_ECHARTS_CONFIG, ThemeOption } from './ngx-echarts.directive';
 import * as i0 from "@angular/core";
 import * as i1 from "./ngx-echarts.directive";
-declare const provideEcharts: () => Provider;
+declare const provideEcharts: (config: Omit<NgxEchartsConfig, 'echarts'>) => Provider;
 declare const provideEchartsCore: (config: NgxEchartsConfig) => Provider;
 export declare class NgxEchartsModule {
     static forRoot(config: NgxEchartsConfig): ModuleWithProviders<NgxEchartsModule>;
@@ -12,3 +12,4 @@ export declare class NgxEchartsModule {
     static ɵinj: i0.ɵɵInjectorDeclaration<NgxEchartsModule>;
 }
 export { NgxEchartsDirective, NGX_ECHARTS_CONFIG, ThemeOption, provideEcharts, provideEchartsCore };
+//# sourceMappingURL=ngx-echarts.module.d.ts.map
\ No newline at end of file
diff --git a/lib/ngx-echarts.module.d.ts.map b/lib/ngx-echarts.module.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..6879bb032e56371784e4b888e175e3121841d6dc
--- /dev/null
+++ b/lib/ngx-echarts.module.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-echarts.module.d.ts","sourceRoot":"","sources":["../../../projects/ngx-echarts/src/lib/ngx-echarts.module.ts"],"names":[],"mappings":"AAAA,OAAO,EAAY,mBAAmB,EAAE,QAAQ,EAAE,MAAM,eAAe,CAAC;AACxE,OAAO,EACL,mBAAmB,EACnB,gBAAgB,EAChB,kBAAkB,EAClB,WAAW,EACZ,MAAM,yBAAyB,CAAC;;;AAEjC,QAAA,MAAM,cAAc,WAAY,KAAK,gBAAgB,EAAE,SAAS,CAAC,KAAG,QAQnE,CAAC;AAEF,QAAA,MAAM,kBAAkB,WAAY,gBAAgB,KAAG,QAKtD,CAAC;AAEF,qBAIa,gBAAgB;IAC3B,MAAM,CAAC,OAAO,CAAC,MAAM,EAAE,gBAAgB,GAAG,mBAAmB,CAAC,gBAAgB,CAAC;IAM/E,MAAM,CAAC,QAAQ,IAAI,mBAAmB,CAAC,gBAAgB,CAAC;yCAP7C,gBAAgB;0CAAhB,gBAAgB;0CAAhB,gBAAgB;CAY5B;AAED,OAAO,EAAE,mBAAmB,EAAE,kBAAkB,EAAE,WAAW,EAAE,cAAc,EAAE,kBAAkB,EAAE,CAAC"}
\ No newline at end of file
diff --git a/ngx-echarts.d.ts.map b/ngx-echarts.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..85e61847327f4212ae0d24a43343f4679e5c7690
--- /dev/null
+++ b/ngx-echarts.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"ngx-echarts.d.ts","sourceRoot":"","sources":["../../projects/ngx-echarts/src/ngx-echarts.ts"],"names":[],"mappings":"AAAA;;GAEG;;AAEH,cAAc,cAAc,CAAC"}
\ No newline at end of file
diff --git a/package.json b/package.json
index 8d147fb23ba078d50659562043e9f659546febd3..0539fb11d949d80b1026330e3d9818e9f7033a3a 100644
--- a/package.json
+++ b/package.json
@@ -34,5 +34,8 @@
   "sideEffects": false,
   "dependencies": {
     "tslib": "^2.3.0"
+  },
+  "scripts": {
+    "prepublishOnly": "node --eval \"console.error('ERROR: Trying to publish a package that has been compiled by Ivy in full compilation mode. This is not allowed.\\nPlease delete and rebuild the package with Ivy partial compilation mode, before attempting to publish.\\n')\" && exit 1"
   }
 }
\ No newline at end of file
diff --git a/public-api.d.ts b/public-api.d.ts
index f3a0e2380e91d834d22815c99697aed67acd717a..9a4916c01abf33593f0e0bfe237c898c5467bf5a 100644
--- a/public-api.d.ts
+++ b/public-api.d.ts
@@ -1 +1,2 @@
 export * from './lib/ngx-echarts.module';
+//# sourceMappingURL=public-api.d.ts.map
\ No newline at end of file
diff --git a/public-api.d.ts.map b/public-api.d.ts.map
new file mode 100644
index 0000000000000000000000000000000000000000..64e74e384f2225f5a95988cad5b033eef9f66954
--- /dev/null
+++ b/public-api.d.ts.map
@@ -0,0 +1 @@
+{"version":3,"file":"public-api.d.ts","sourceRoot":"","sources":["../../projects/ngx-echarts/src/public-api.ts"],"names":[],"mappings":"AAIA,cAAc,0BAA0B,CAAC"}
